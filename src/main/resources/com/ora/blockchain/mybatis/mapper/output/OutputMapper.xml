<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ora.blockchain.mybatis.mapper.output.OutputMapper">

    <insert id="insertOutputList">
        insert into ${database}.output (`coinbase`,`wallet_account_id`,`transaction_txid`, `value`, `value_sat`, `n`,
        `script_pub_key_asm`, `script_pub_key_hex`, `script_pub_key_req_sigs`, `script_pub_key_type`,
        `script_pub_key_addresses`,`status`,`create_ts`)
        VALUES
        <foreach collection="outputList" item="pojo" index="index" separator=",">
            (#{pojo.coinbase},#{pojo.walletAccountId},#{pojo.transactionTxid}, #{pojo.value}, #{pojo.valueSat}, #{pojo.n},
            #{pojo.scriptPubKeyAsm}, #{pojo.scriptPubKeyHex}, #{pojo.scriptPubKeyReqSigs}, #{pojo.scriptPubKeyType},
            #{pojo.scriptPubKeyAddresses},#{pojo.status},now())
        </foreach>
    </insert>
    <update id="updateOutputByTxid">
        UPDATE ${database}.output SET status = #{status} WHERE transaction_txid IN
        <foreach item="item" index="index" collection="txidList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateOutput">
    UPDATE ${database}.output SET status = #{status} WHERE transaction_txid = #{transactionTxid} AND n = #{n}
  </update>
    <update id="updateOutputBatch" parameterType="java.util.List">
        <foreach collection="outputList" item="item" separator=";">
          UPDATE ${database}.output SET `status` = #{status} WHERE transaction_txid = #{item.transactionTxid} AND n = #{item.n}
        </foreach>
    </update>
    <select id="queryOutputByPrimary" resultType="com.ora.blockchain.mybatis.entity.output.Output">
        SELECT wallet_account_id AS walletAccountId,script_pub_key_addresses AS scriptPubKeyAddresses, transaction_txid AS transactionTxid,n FROM ${database}.output WHERE transaction_txid = #{transactionTxid} AND n = #{n} LIMIT 1
    </select>
    <select id="queryAccountByTransactionTxid" resultType="long">
        SELECT wallet_account_id FROM ${database}.output WHERE wallet_account_id > 0 AND transaction_txid IN
        <foreach item="item" index="index" collection="txidList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="queryAddressByTransactionTxid" resultType="string">
        SELECT script_pub_key_addresses FROM ${database}.output WHERE wallet_account_id > 0 AND transaction_txid IN
        <foreach item="item" index="index" collection="txidList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="queryTransactionByTxid" resultType="string">
        SELECT DISTINCT transaction_txid FROM ${database}.output WHERE wallet_account_id > 0 AND transaction_txid IN
        <foreach item="item" index="index" collection="txidList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="queryTotalBalance" resultType="com.ora.blockchain.mybatis.entity.wallet.WalletAccountBalance">
        SELECT o.wallet_account_id AS accountId,o.value_sat AS totalBalance FROM ${database}.`transaction` t,${database}.output o
        WHERE o.transaction_txid = t.txid
        AND t.trans_status = 3
        AND o.status = 1
        AND t.block_hash IS NOT NULL
        AND o.wallet_account_id IN
        <foreach item="item" index="index" collection="accountList" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION ALL
        SELECT o.wallet_account_id AS accountId,o.value_sat AS totalBalance FROM ${database}.`transaction` t,${database}.output o
        WHERE o.transaction_txid = t.txid
        AND t.trans_status = 1
        AND o.status = 2
        AND t.block_hash IS NULL
        AND o.wallet_account_id IN
        <foreach item="item" index="index" collection="accountList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>
