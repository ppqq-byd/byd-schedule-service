<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ora.blockchain.mybatis.mapper.transaction.EthereumTransactionMapper">
    <resultMap id="AllColumnMap" type="com.ora.blockchain.mybatis.entity.eth.EthereumTransaction">
        <result column="id" property="id"/>
        <result column="tx_id" property="txId"/>
        <result column="from" property="from"/>
        <result column="to" property="to"/>
        <result column="block_height" property="blockHeight"/>
        <result column="block_hash" property="blockHash"/>
        <result column="value" property="value"/>
        <result column="gas_price" property="gasPrice"/>
        <result column="gas_limit" property="gasLimit"/>
        <result column="gas_used" property="gasUsed"/>
        <result column="is_sender" property="isSender"/>
        <result column="nonce" property="nonce"/>
        <result column="input" property="input"/>
        <result column="contract_address" property="contractAddress"/>

    </resultMap>
    <!--auto generated Code-->
    <sql id="all_column">
        `id`,
        `tx_id`,
        `from`,
        `to`,
        `block_height`,
        `block_hash`,
        `value`,
        `gas_price`,
        `gas_limit`,
        `gas_used`,
        `nonce`,
         `input`,
         `status`,
         `is_delete`,
         `contract_address`,
        `is_sender`,
        `create_ts`,
        `update_ts`
    </sql>

    <insert id="insertTransaction">
        INSERT INTO ${database}.tx_ethereum ( `id`,
        `tx_id`,
        `from`,
        `to`,
        `block_height`,
        `block_hash`,
        `value`,
        `gas_price`,
        `gas_limit`,
        `gas_used`,
          `input`,
        `nonce`,
         `status`,
         `is_delete`,
        `is_sender``,
         `contract_address`)
        VALUES (#{pojo.id}, #{pojo.txId}, #{pojo.from}, #{pojo.to},
            #{pojo.blockHeight}, #{pojo.blockHash},#{pojo.value}, #{pojo.gasPrice},
        #{pojo.gasLimit},
        #{pojo.gasUsed},#{pojo.input},#{pojo.nonce},
            #{pojo.status},#{pojo.isDelete},#{pojo.isSender},#{pojo.contractAddress})
    </insert>

    <insert id="insertTxList">
        INSERT INTO ${database}.tx_ethereum (
        `tx_id`,
        `from`,
        `to`,
        `block_height`,
        `block_hash`,
        `value`,
        `gas_price`,
        `gas_limit`,
        `gas_used`,
        `input`,
        `nonce`,
        `status`,
        `is_delete`,
        `is_sender`,
        `contract_address`
        )
        VALUES
        <foreach collection="txList" item="pojo" index="index" separator=",">
            (
            #{pojo.txId}, #{pojo.from}, #{pojo.to},
            #{pojo.blockHeight}, #{pojo.blockHash},#{pojo.value}, #{pojo.gasPrice},#{pojo.gasLimit},
            #{pojo.gasUsed},#{pojo.input},#{pojo.nonce},#{pojo.status},#{pojo.isDelete},#{pojo.isSender},
            #{pojo.contractAddress}
            )
        </foreach>
    </insert>


    <select id="queryMaxBlockOfTxInDb" resultType="Long">
        SELECT  IFNULL(MAX(block_height),0 ) FROM ${database}.tx_ethereum
    </select>

    <update id="updateTransacionIsolate">
        UPDATE ${database}.tx_ethereum
        <set>
            `block_hash` = #{blockHash},
            `status`=#{txStatus}

        </set>
        WHERE block_height = #{blockHeight}
    </update>
    <update id="update">

            update ${database}.tx_ethereum
            <set>
                status=#{item.status},
                block_height = #{item.blockHeight},
                block_hash = #{item.blockHash},
                gas_price = #{item.gasPrice},
                gas_limit = #{item.gasLimit},
                gas_used = #{item.gasUsed},
                value = #{item.value},
                input = #{item.input},
                nonce = #{item.nonce},
                is_sender=#{item.isSender},
                update_ts = #{item.updateTs},
                contract_address=#{item.contractAddress},
                status=#{item.status}
            </set>
            where tx_id = #{item.txId}

    </update>
    <select id="queryIsolatedBlockTx" resultMap="AllColumnMap">
        SELECT  <include refid="all_column"/> FROM ${database}.tx_ethereum
        WHERE block_hash is NULL
    </select>

    <delete id="deleteTxByTxhash">
        DELETE FROM ${database}.tx_ethereum WHERE tx_id in
        <foreach item="item" index="index" collection="txList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="batchUpdate"  parameterType="java.util.List">

        <foreach collection="txList" item="item" index="index" open="" close="" separator=";">
            update ${database}.tx_ethereum
            <set>
                status=#{item.status},
                block_height = #{item.blockHeight},
                block_hash = #{item.blockHash},
                gas_price = #{item.gasPrice},
                gas_limit = #{item.gasLimit},
                gas_used = #{item.gasUsed},
                value = #{item.value},
                input = #{item.input},
                nonce = #{item.nonce},
                is_sender=#{item.isSender},
                update_ts = #{item.updateTs},
                contract_address=#{item.contractAddress},
                status=#{item.status}
            </set>
            where tx_id = #{item.txId}
        </foreach>

    </update>

    <select id="queryTxInDb" resultMap="AllColumnMap">
        SELECT  <include refid="all_column"/> FROM ${database}.tx_ethereum
        WHERE tx_id IN
        <foreach item="item" index="index" collection="txList" open="(" separator="," close=")">
            #{item.txId}
        </foreach>
    </select>

    <select id="queryTxByBlockNumber" resultMap="AllColumnMap">
        SELECT  <include refid="all_column"/> FROM ${database}.tx_ethereum
        WHERE block_height = #{blockNumber}

    </select>

    <select id="queryNotConfirmTxByLastedBlockNumber" resultMap="AllColumnMap">
        SELECT  <include refid="all_column"/> FROM ${database}.tx_ethereum
        WHERE block_height&lt;= (SELECT MAX(block_number) FROM coin_eth.block) -12

    </select>
    <select id="queryTxByStatus" resultMap="AllColumnMap">
        SELECT  <include refid="all_column"/> FROM ${database}.tx_ethereum
        WHERE status=#{status}

    </select>

    <select id="queryTimeoutTxBySentAndIsolate" resultMap="AllColumnMap">
        SELECT  <include refid="all_column"/> FROM ${database}.tx_ethereum
        WHERE (status=#{status1} or status=#{status2}) and create_ts &gt;=#{beginTime}

    </select>
</mapper>