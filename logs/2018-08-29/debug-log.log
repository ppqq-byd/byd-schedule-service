2018-08-29 14:55:11,504 [background-preinit] [DEBUG] org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2018-08-29 14:55:11,517 [background-preinit] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 14:55:23,355 [main] [DEBUG] com.ora.blockchain.service.block.IBlockTest - Running with Spring Boot v1.5.8.RELEASE, Spring v4.3.12.RELEASE
2018-08-29 14:55:23,793 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/block/BlockMapper.class]
2018-08-29 14:55:23,793 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/block/EthereumBlockMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/common/ScanCursorMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/input/InputMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/output/OutputMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/EthereumERC20Mapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/EthereumTransactionMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/TransactionMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletAccountBalanceMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletAccountBindMapper.class]
2018-08-29 14:55:23,794 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletMapper.class]
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'blockMapper' and 'com.ora.blockchain.mybatis.mapper.block.BlockMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'blockMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumBlockMapper' and 'com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumBlockMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'scanCursorMapper' and 'com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'scanCursorMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'inputMapper' and 'com.ora.blockchain.mybatis.mapper.input.InputMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'inputMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'outputMapper' and 'com.ora.blockchain.mybatis.mapper.output.OutputMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'outputMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumERC20Mapper' and 'com.ora.blockchain.mybatis.mapper.transaction.EthereumERC20Mapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumERC20Mapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumTransactionMapper' and 'com.ora.blockchain.mybatis.mapper.transaction.EthereumTransactionMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumTransactionMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'transactionMapper' and 'com.ora.blockchain.mybatis.mapper.transaction.TransactionMapper' mapperInterface
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'transactionMapper'.
2018-08-29 14:55:23,795 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletAccountBalanceMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletAccountBalanceMapper' mapperInterface
2018-08-29 14:55:23,796 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletAccountBalanceMapper'.
2018-08-29 14:55:23,796 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletAccountBindMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletAccountBindMapper' mapperInterface
2018-08-29 14:55:23,796 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletAccountBindMapper'.
2018-08-29 14:55:23,796 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletMapper' mapperInterface
2018-08-29 14:55:23,796 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletMapper'.
2018-08-29 14:55:24,377 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 14:55:24,384 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 14:55:24,386 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-08-29 14:55:24,387 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-08-29 14:55:24,388 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy93
2018-08-29 14:55:24,389 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-08-29 14:55:24,390 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2018-08-29 14:55:24,390 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2018-08-29 14:55:24,390 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-08-29 14:55:24,391 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2018-08-29 14:55:37,845 [main] [DEBUG] org.mybatis.spring.SqlSessionFactoryBean - Property 'mapperLocations' was not specified or no matching resources found
2018-08-29 14:55:39,053 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 14:55:39,058 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 14:55:39,058 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-08-29 14:55:39,058 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-08-29 14:55:39,058 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy93
2018-08-29 14:55:39,058 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-08-29 14:55:39,058 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2018-08-29 14:55:39,059 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2018-08-29 14:55:39,059 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-08-29 14:55:39,059 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2018-08-29 14:55:39,419 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' is desired by: main
2018-08-29 14:55:39,420 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' is being obtained: main
2018-08-29 14:55:39,442 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' given to: main
2018-08-29 14:55:39,534 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: main
2018-08-29 14:55:39,534 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: main
2018-08-29 14:55:39,556 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: main
2018-08-29 14:55:39,648 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: main
2018-08-29 14:55:39,648 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' returned by: main
2018-08-29 14:55:39,716 [QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler
2018-08-29 14:55:39,716 [QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler
2018-08-29 14:55:39,738 [QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler
2018-08-29 14:55:40,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 14:55:40,091 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:40,094 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4915e]
2018-08-29 14:55:40,112 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:40,114 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryByBlockHeight - ==>  Preparing: SELECT block_hash AS blockHash FROM coin_btc.block WHERE height = ? LIMIT 1 
2018-08-29 14:55:40,119 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryByBlockHeight - ==> Parameters: 536051(Long)
2018-08-29 14:55:40,168 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryByBlockHeight - <==      Total: 0
2018-08-29 14:55:40,168 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4915e]
2018-08-29 14:55:40,168 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4915e]
2018-08-29 14:55:40,168 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4915e]
2018-08-29 14:55:40,169 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4915e]
2018-08-29 14:55:40,270 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:40,270 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286]
2018-08-29 14:55:40,270 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:40,270 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:40,271 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:40,293 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:40,294 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286]
2018-08-29 14:55:40,294 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286]
2018-08-29 14:55:40,294 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286]
2018-08-29 14:55:40,294 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a497286]
2018-08-29 14:55:40,410 [QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: QuartzScheduler_schedulerFactoryBean-bogon1535525736668_MisfireHandler
2018-08-29 14:55:40,417 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:40,417 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4]
2018-08-29 14:55:40,417 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:40,417 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:40,417 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:40,440 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:40,440 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4]
2018-08-29 14:55:40,680 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:40,705 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:40,705 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:40,730 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,063 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:55:41,101 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:41,102 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c51cb7]
2018-08-29 14:55:41,103 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:41,104 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:55:41,104 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:41,130 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:55:41,130 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c51cb7]
2018-08-29 14:55:41,130 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c51cb7]
2018-08-29 14:55:41,131 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c51cb7]
2018-08-29 14:55:41,131 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c51cb7]
2018-08-29 14:55:41,219 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 14:55:41,219 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 14:55:41,242 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 14:55:41,311 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:41,331 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 14:55:41,333 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,333 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,356 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,487 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4] from current transaction
2018-08-29 14:55:41,487 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==>  Preparing: INSERT INTO coin_btc.scancursor ( `current_block`, `sync_status` ) VALUES ( ?, ? ) 
2018-08-29 14:55:41,491 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==> Parameters: 536050(Long), 0(Integer)
2018-08-29 14:55:41,536 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - <==    Updates: 1
2018-08-29 14:55:41,536 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4]
2018-08-29 14:55:41,536 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4]
2018-08-29 14:55:41,536 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4]
2018-08-29 14:55:41,536 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d53ab4]
2018-08-29 14:55:41,625 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,627 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:41,627 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,628 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:41,628 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:55:41,628 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:41,649 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 14:55:41,653 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 1
2018-08-29 14:55:41,653 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,653 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32] from current transaction
2018-08-29 14:55:41,654 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:41,654 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:41,672 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:41,673 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197fb746]
2018-08-29 14:55:41,673 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:41,674 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 14:55:41,674 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 14:55:41,677 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:41,677 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,678 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32] from current transaction
2018-08-29 14:55:41,696 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.update - ==>  Preparing: UPDATE coin_btc.scancursor SET `sync_status` = ? WHERE current_block = ? 
2018-08-29 14:55:41,697 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.update - ==> Parameters: 1(Integer), 536050(Long)
2018-08-29 14:55:41,697 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 14:55:41,697 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197fb746]
2018-08-29 14:55:41,724 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 14:55:41,724 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 14:55:41,724 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 14:55:41,725 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 14:55:41,725 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":0}
2018-08-29 14:55:41,725 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 14:55:41,741 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.update - <==    Updates: 1
2018-08-29 14:55:41,741 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,741 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,741 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,741 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bf2aa32]
2018-08-29 14:55:41,748 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 14:55:41,749 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197fb746]
2018-08-29 14:55:41,749 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197fb746]
2018-08-29 14:55:41,749 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197fb746]
2018-08-29 14:55:41,831 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:41,832 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87]
2018-08-29 14:55:41,832 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:41,832 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:41,832 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:41,841 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 14:55:41,841 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 14:55:41,855 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:41,855 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87]
2018-08-29 14:55:41,864 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 14:55:41,899 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:41,921 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,922 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,954 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:41,956 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 14:55:42,231 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:42,253 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:55:42,276 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:42,276 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29355eb8]
2018-08-29 14:55:42,276 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:42,276 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:55:42,276 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:42,299 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:55:42,299 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29355eb8]
2018-08-29 14:55:42,299 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29355eb8]
2018-08-29 14:55:42,299 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29355eb8]
2018-08-29 14:55:42,299 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29355eb8]
2018-08-29 14:55:42,387 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 14:55:42,388 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 14:55:42,411 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 14:55:42,504 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 14:55:42,504 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:42,527 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:42,527 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:42,549 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:42,725 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87] from current transaction
2018-08-29 14:55:42,725 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==>  Preparing: INSERT INTO coin_btc.scancursor ( `current_block`, `sync_status` ) VALUES ( ?, ? ) 
2018-08-29 14:55:42,726 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==> Parameters: 536050(Long), 0(Integer)
2018-08-29 14:55:42,771 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - <==    Updates: 1
2018-08-29 14:55:42,771 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87]
2018-08-29 14:55:42,771 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87]
2018-08-29 14:55:42,772 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87]
2018-08-29 14:55:42,772 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19105a87]
2018-08-29 14:55:42,826 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:42,848 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 14:55:42,862 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:42,862 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2120bed]
2018-08-29 14:55:42,862 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:42,862 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:55:42,862 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:42,870 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:42,870 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e39559]
2018-08-29 14:55:42,871 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:42,871 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:55:42,871 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:42,885 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 2
2018-08-29 14:55:42,887 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2120bed]
2018-08-29 14:55:42,887 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2120bed]
2018-08-29 14:55:42,887 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2120bed]
2018-08-29 14:55:42,895 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 2
2018-08-29 14:55:42,895 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e39559]
2018-08-29 14:55:42,895 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e39559]
2018-08-29 14:55:42,896 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48e39559]
2018-08-29 14:55:42,981 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:42,981 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e]
2018-08-29 14:55:42,982 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:42,982 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:42,982 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:42,987 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 14:55:42,987 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 14:55:43,005 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:43,005 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e]
2018-08-29 14:55:43,009 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 14:55:43,095 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:43,098 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 14:55:43,121 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:43,121 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:43,144 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:43,212 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:43,486 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:43,908 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e] from current transaction
2018-08-29 14:55:43,909 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==>  Preparing: INSERT INTO coin_btc.scancursor ( `current_block`, `sync_status` ) VALUES ( ?, ? ) 
2018-08-29 14:55:43,910 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==> Parameters: 536050(Long), 0(Integer)
2018-08-29 14:55:43,956 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - <==    Updates: 1
2018-08-29 14:55:43,957 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e]
2018-08-29 14:55:43,957 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e]
2018-08-29 14:55:43,957 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e]
2018-08-29 14:55:43,957 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458c71e]
2018-08-29 14:55:44,048 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:44,048 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577bfadb]
2018-08-29 14:55:44,048 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:44,048 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:55:44,049 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:44,073 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 3
2018-08-29 14:55:44,074 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577bfadb]
2018-08-29 14:55:44,074 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577bfadb]
2018-08-29 14:55:44,074 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577bfadb]
2018-08-29 14:55:44,180 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:44,180 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24]
2018-08-29 14:55:44,180 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:44,180 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:44,180 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:44,203 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:44,203 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24]
2018-08-29 14:55:45,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,046 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,108 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24] from current transaction
2018-08-29 14:55:45,108 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==>  Preparing: INSERT INTO coin_btc.scancursor ( `current_block`, `sync_status` ) VALUES ( ?, ? ) 
2018-08-29 14:55:45,108 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==> Parameters: 536050(Long), 0(Integer)
2018-08-29 14:55:45,153 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - <==    Updates: 1
2018-08-29 14:55:45,153 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24]
2018-08-29 14:55:45,153 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24]
2018-08-29 14:55:45,153 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24]
2018-08-29 14:55:45,154 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b71d24]
2018-08-29 14:55:45,249 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:45,250 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5280688]
2018-08-29 14:55:45,250 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:55:45,250 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:55:45,251 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:45,275 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 4
2018-08-29 14:55:45,275 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5280688]
2018-08-29 14:55:45,275 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5280688]
2018-08-29 14:55:45,275 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5280688]
2018-08-29 14:55:45,319 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,341 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:55:45,363 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:45,363 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538f9853]
2018-08-29 14:55:45,364 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:45,364 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0]
2018-08-29 14:55:45,364 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:55:45,364 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:55:45,365 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:45,365 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:45,365 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_btc.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:45,365 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:45,389 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:55:45,389 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 0
2018-08-29 14:55:45,390 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538f9853]
2018-08-29 14:55:45,390 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0]
2018-08-29 14:55:45,390 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538f9853]
2018-08-29 14:55:45,390 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538f9853]
2018-08-29 14:55:45,390 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538f9853]
2018-08-29 14:55:45,480 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 14:55:45,481 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 14:55:45,502 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 14:55:45,593 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 14:55:45,593 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:45,615 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,616 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,638 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,707 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:45,986 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:46,291 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0] from current transaction
2018-08-29 14:55:46,292 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==>  Preparing: INSERT INTO coin_btc.scancursor ( `current_block`, `sync_status` ) VALUES ( ?, ? ) 
2018-08-29 14:55:46,292 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - ==> Parameters: 536050(Long), 0(Integer)
2018-08-29 14:55:46,337 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.insert - <==    Updates: 1
2018-08-29 14:55:46,338 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0]
2018-08-29 14:55:46,338 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0]
2018-08-29 14:55:46,338 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0]
2018-08-29 14:55:46,338 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12fccff0]
2018-08-29 14:55:46,428 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:46,428 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464ede1f]
2018-08-29 14:55:46,428 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:46,429 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:55:46,429 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:46,453 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 5
2018-08-29 14:55:46,453 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464ede1f]
2018-08-29 14:55:46,453 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464ede1f]
2018-08-29 14:55:46,453 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464ede1f]
2018-08-29 14:55:46,550 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:46,550 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437]
2018-08-29 14:55:46,550 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:46,550 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:46,550 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:46,573 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:46,573 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437]
2018-08-29 14:55:46,842 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437] from current transaction
2018-08-29 14:55:46,842 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437]
2018-08-29 14:55:46,943 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437] from current transaction
2018-08-29 14:55:46,943 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:46,945 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:46,989 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:46,990 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437]
2018-08-29 14:55:47,206 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437]
2018-08-29 14:55:47,206 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eab8437]
2018-08-29 14:55:47,299 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:47,299 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26]
2018-08-29 14:55:47,300 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:47,300 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:47,300 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:47,322 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:47,323 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26]
2018-08-29 14:55:47,508 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26] from current transaction
2018-08-29 14:55:47,509 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26]
2018-08-29 14:55:47,609 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26] from current transaction
2018-08-29 14:55:47,610 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:47,612 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:47,656 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:47,657 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26]
2018-08-29 14:55:47,825 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26]
2018-08-29 14:55:47,825 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36df4c26]
2018-08-29 14:55:47,919 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:47,919 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08]
2018-08-29 14:55:47,919 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:47,919 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:47,920 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:47,943 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:47,943 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08]
2018-08-29 14:55:48,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,140 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08] from current transaction
2018-08-29 14:55:48,141 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08]
2018-08-29 14:55:48,238 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08] from current transaction
2018-08-29 14:55:48,239 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:48,241 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:48,286 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:48,286 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08]
2018-08-29 14:55:48,322 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,347 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 14:55:48,370 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:48,370 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2180b9e1]
2018-08-29 14:55:48,370 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:55:48,370 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 14:55:48,370 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 14:55:48,393 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 14:55:48,393 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2180b9e1]
2018-08-29 14:55:48,394 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 14:55:48,395 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 14:55:48,395 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 14:55:48,395 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 14:55:48,395 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}
2018-08-29 14:55:48,395 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 14:55:48,418 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 14:55:48,419 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2180b9e1]
2018-08-29 14:55:48,419 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2180b9e1]
2018-08-29 14:55:48,419 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2180b9e1]
2018-08-29 14:55:48,448 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08]
2018-08-29 14:55:48,448 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b53f08]
2018-08-29 14:55:48,509 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 14:55:48,510 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 14:55:48,532 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 14:55:48,539 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:48,539 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5]
2018-08-29 14:55:48,539 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:48,540 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:48,540 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:48,563 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:48,563 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5]
2018-08-29 14:55:48,599 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:48,623 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 14:55:48,645 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,645 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,669 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,701 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5] from current transaction
2018-08-29 14:55:48,702 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5]
2018-08-29 14:55:48,738 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:48,772 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5] from current transaction
2018-08-29 14:55:48,773 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:48,774 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:48,820 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:48,820 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5]
2018-08-29 14:55:48,987 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5]
2018-08-29 14:55:48,987 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c9bf3b5]
2018-08-29 14:55:49,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:49,082 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:49,082 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59]
2018-08-29 14:55:49,083 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:49,083 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:49,083 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:49,106 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:49,106 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59]
2018-08-29 14:55:49,291 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59] from current transaction
2018-08-29 14:55:49,291 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59]
2018-08-29 14:55:49,369 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59] from current transaction
2018-08-29 14:55:49,369 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:49,370 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:49,415 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:49,415 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59]
2018-08-29 14:55:49,584 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59]
2018-08-29 14:55:49,584 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7f1e59]
2018-08-29 14:55:49,677 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:49,677 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c]
2018-08-29 14:55:49,677 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:49,678 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:49,678 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:49,701 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:49,701 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c]
2018-08-29 14:55:49,891 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c] from current transaction
2018-08-29 14:55:49,892 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c]
2018-08-29 14:55:50,000 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c] from current transaction
2018-08-29 14:55:50,000 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:50,001 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:50,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,046 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,047 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:50,047 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c]
2018-08-29 14:55:50,201 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c]
2018-08-29 14:55:50,201 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559d19c]
2018-08-29 14:55:50,292 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:50,293 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f]
2018-08-29 14:55:50,293 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:50,293 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:50,293 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:50,316 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:50,316 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f]
2018-08-29 14:55:50,330 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,353 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:55:50,374 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:50,375 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62836a95]
2018-08-29 14:55:50,375 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:55:50,375 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:55:50,375 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:50,397 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:55:50,397 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62836a95]
2018-08-29 14:55:50,398 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62836a95]
2018-08-29 14:55:50,398 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62836a95]
2018-08-29 14:55:50,398 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62836a95]
2018-08-29 14:55:50,463 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f] from current transaction
2018-08-29 14:55:50,463 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f]
2018-08-29 14:55:50,486 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 14:55:50,486 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 14:55:50,509 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 14:55:50,532 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f] from current transaction
2018-08-29 14:55:50,532 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:50,532 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:50,577 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:50,577 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f]
2018-08-29 14:55:50,601 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 14:55:50,601 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:50,623 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,623 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,646 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,715 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:50,750 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f]
2018-08-29 14:55:50,750 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a588b5f]
2018-08-29 14:55:50,843 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:50,843 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611]
2018-08-29 14:55:50,843 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:50,843 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:50,843 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:50,868 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:50,869 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611]
2018-08-29 14:55:50,991 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:51,051 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611] from current transaction
2018-08-29 14:55:51,051 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611]
2018-08-29 14:55:51,138 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611] from current transaction
2018-08-29 14:55:51,139 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:51,139 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:51,184 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:51,184 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611]
2018-08-29 14:55:51,372 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611]
2018-08-29 14:55:51,372 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7185e611]
2018-08-29 14:55:51,466 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:51,466 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb]
2018-08-29 14:55:51,467 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:51,467 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:51,467 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:51,491 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:51,492 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb]
2018-08-29 14:55:51,681 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb] from current transaction
2018-08-29 14:55:51,682 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb]
2018-08-29 14:55:51,758 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb] from current transaction
2018-08-29 14:55:51,758 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:51,759 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:51,803 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:51,803 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb]
2018-08-29 14:55:51,971 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb]
2018-08-29 14:55:51,971 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e5c8fb]
2018-08-29 14:55:52,062 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:52,062 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f]
2018-08-29 14:55:52,062 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:52,063 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:52,063 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:52,085 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:52,086 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f]
2018-08-29 14:55:52,270 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f] from current transaction
2018-08-29 14:55:52,270 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f]
2018-08-29 14:55:52,350 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f] from current transaction
2018-08-29 14:55:52,351 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:52,352 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:52,396 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:52,396 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f]
2018-08-29 14:55:52,570 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f]
2018-08-29 14:55:52,570 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3b858f]
2018-08-29 14:55:52,663 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:52,663 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af]
2018-08-29 14:55:52,663 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:52,663 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:52,663 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:52,686 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:52,687 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af]
2018-08-29 14:55:52,857 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af] from current transaction
2018-08-29 14:55:52,858 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af]
2018-08-29 14:55:52,953 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af] from current transaction
2018-08-29 14:55:52,954 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:52,955 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:52,999 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:53,000 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af]
2018-08-29 14:55:53,155 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af]
2018-08-29 14:55:53,155 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2347b7af]
2018-08-29 14:55:53,248 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:53,248 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8]
2018-08-29 14:55:53,248 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:53,249 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:53,249 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:53,272 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:53,272 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8]
2018-08-29 14:55:53,456 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8] from current transaction
2018-08-29 14:55:53,456 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8]
2018-08-29 14:55:53,539 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8] from current transaction
2018-08-29 14:55:53,540 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:53,541 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:53,585 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:53,585 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8]
2018-08-29 14:55:53,773 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8]
2018-08-29 14:55:53,773 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3fc6d8]
2018-08-29 14:55:53,866 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:53,866 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e]
2018-08-29 14:55:53,866 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:53,867 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:53,867 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:53,891 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:53,891 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e]
2018-08-29 14:55:54,069 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e] from current transaction
2018-08-29 14:55:54,069 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e]
2018-08-29 14:55:54,156 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e] from current transaction
2018-08-29 14:55:54,156 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:54,157 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:54,201 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:54,201 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e]
2018-08-29 14:55:54,372 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e]
2018-08-29 14:55:54,372 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baa227e]
2018-08-29 14:55:54,462 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:54,462 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4]
2018-08-29 14:55:54,462 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:54,462 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:54,462 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:54,484 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:54,484 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4]
2018-08-29 14:55:54,672 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4] from current transaction
2018-08-29 14:55:54,673 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4]
2018-08-29 14:55:54,753 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4] from current transaction
2018-08-29 14:55:54,754 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:54,755 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:54,799 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:54,799 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4]
2018-08-29 14:55:54,982 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4]
2018-08-29 14:55:54,982 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef037e4]
2018-08-29 14:55:55,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,073 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:55,074 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0]
2018-08-29 14:55:55,074 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:55,074 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:55,074 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:55,097 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:55,097 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0]
2018-08-29 14:55:55,254 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0] from current transaction
2018-08-29 14:55:55,255 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0]
2018-08-29 14:55:55,321 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,338 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0] from current transaction
2018-08-29 14:55:55,339 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:55,339 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:55,343 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:55:55,366 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:55,366 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48788d1]
2018-08-29 14:55:55,367 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:55:55,367 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:55:55,367 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:55:55,384 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:55,384 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0]
2018-08-29 14:55:55,389 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:55:55,390 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48788d1]
2018-08-29 14:55:55,390 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48788d1]
2018-08-29 14:55:55,390 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48788d1]
2018-08-29 14:55:55,390 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48788d1]
2018-08-29 14:55:55,478 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 14:55:55,478 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 14:55:55,500 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 14:55:55,553 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0]
2018-08-29 14:55:55,553 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b670c0]
2018-08-29 14:55:55,589 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 14:55:55,595 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:55,616 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,617 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,639 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,644 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:55,644 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8]
2018-08-29 14:55:55,644 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:55,645 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:55,645 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:55,671 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:55,671 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8]
2018-08-29 14:55:55,708 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:55,866 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8] from current transaction
2018-08-29 14:55:55,867 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8]
2018-08-29 14:55:55,962 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8] from current transaction
2018-08-29 14:55:55,963 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:55,966 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:55,984 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:56,012 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:56,013 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8]
2018-08-29 14:55:56,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,190 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8]
2018-08-29 14:55:56,190 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7068d8]
2018-08-29 14:55:56,295 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:56,295 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402]
2018-08-29 14:55:56,295 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:56,295 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:56,295 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:56,318 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:56,318 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402]
2018-08-29 14:55:56,338 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,360 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 14:55:56,382 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:56,382 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2f5f2e]
2018-08-29 14:55:56,382 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:55:56,382 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 14:55:56,382 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 14:55:56,405 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 14:55:56,405 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2f5f2e]
2018-08-29 14:55:56,405 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 14:55:56,405 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 14:55:56,405 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 14:55:56,406 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 14:55:56,406 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":2}
2018-08-29 14:55:56,406 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 14:55:56,428 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 14:55:56,429 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2f5f2e]
2018-08-29 14:55:56,429 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2f5f2e]
2018-08-29 14:55:56,429 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c2f5f2e]
2018-08-29 14:55:56,483 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402] from current transaction
2018-08-29 14:55:56,483 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402]
2018-08-29 14:55:56,521 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 14:55:56,521 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 14:55:56,543 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 14:55:56,549 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402] from current transaction
2018-08-29 14:55:56,550 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:56,550 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:56,594 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:56,594 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402]
2018-08-29 14:55:56,611 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:56,633 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 14:55:56,655 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,655 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,679 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,748 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:55:56,757 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402]
2018-08-29 14:55:56,757 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c34402]
2018-08-29 14:55:56,849 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:56,849 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c]
2018-08-29 14:55:56,849 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:56,849 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:56,849 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:56,871 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:56,872 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c]
2018-08-29 14:55:57,013 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c] from current transaction
2018-08-29 14:55:57,013 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c]
2018-08-29 14:55:57,020 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:55:57,102 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c] from current transaction
2018-08-29 14:55:57,103 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:57,104 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:57,148 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:57,148 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c]
2018-08-29 14:55:57,316 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c]
2018-08-29 14:55:57,316 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d88fa9c]
2018-08-29 14:55:57,406 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:57,406 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99]
2018-08-29 14:55:57,407 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:57,407 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:57,407 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:57,429 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:57,429 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99]
2018-08-29 14:55:57,600 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99] from current transaction
2018-08-29 14:55:57,600 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99]
2018-08-29 14:55:57,690 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99] from current transaction
2018-08-29 14:55:57,691 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:57,692 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:57,737 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:57,737 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99]
2018-08-29 14:55:57,911 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99]
2018-08-29 14:55:57,911 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64fdcf99]
2018-08-29 14:55:58,001 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:58,001 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477]
2018-08-29 14:55:58,002 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:58,002 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:58,002 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:58,024 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:58,025 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477]
2018-08-29 14:55:58,171 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477] from current transaction
2018-08-29 14:55:58,172 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477]
2018-08-29 14:55:58,242 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477] from current transaction
2018-08-29 14:55:58,242 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:58,243 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:58,288 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:58,288 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477]
2018-08-29 14:55:58,429 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477]
2018-08-29 14:55:58,429 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786a3477]
2018-08-29 14:55:58,523 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:58,523 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f]
2018-08-29 14:55:58,523 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:58,524 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:58,524 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:58,547 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:58,547 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f]
2018-08-29 14:55:58,690 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f] from current transaction
2018-08-29 14:55:58,690 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f]
2018-08-29 14:55:58,770 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f] from current transaction
2018-08-29 14:55:58,771 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:58,772 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:58,816 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:58,817 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f]
2018-08-29 14:55:58,983 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f]
2018-08-29 14:55:58,983 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@667797f]
2018-08-29 14:55:59,075 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:59,075 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715]
2018-08-29 14:55:59,075 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:59,075 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:59,075 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:59,097 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:59,098 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715]
2018-08-29 14:55:59,245 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715] from current transaction
2018-08-29 14:55:59,245 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715]
2018-08-29 14:55:59,323 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715] from current transaction
2018-08-29 14:55:59,324 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:59,325 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:59,369 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:59,370 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715]
2018-08-29 14:55:59,517 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715]
2018-08-29 14:55:59,517 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4536a715]
2018-08-29 14:55:59,609 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:55:59,609 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97]
2018-08-29 14:55:59,610 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:55:59,610 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:55:59,610 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:55:59,632 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:55:59,633 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97]
2018-08-29 14:55:59,775 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97] from current transaction
2018-08-29 14:55:59,776 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97]
2018-08-29 14:55:59,844 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97] from current transaction
2018-08-29 14:55:59,845 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:55:59,845 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:55:59,890 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:55:59,890 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97]
2018-08-29 14:56:00,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,040 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97]
2018-08-29 14:56:00,040 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b6ad97]
2018-08-29 14:56:00,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,131 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:00,131 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea]
2018-08-29 14:56:00,131 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:00,132 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:00,132 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:00,154 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:00,154 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea]
2018-08-29 14:56:00,305 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea] from current transaction
2018-08-29 14:56:00,306 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea]
2018-08-29 14:56:00,323 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,346 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 14:56:00,370 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:00,370 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4839c4f8]
2018-08-29 14:56:00,370 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:56:00,370 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 14:56:00,370 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4839c4f8]
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":3}
2018-08-29 14:56:00,392 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 14:56:00,393 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea] from current transaction
2018-08-29 14:56:00,393 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:00,393 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:00,415 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 14:56:00,416 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4839c4f8]
2018-08-29 14:56:00,416 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4839c4f8]
2018-08-29 14:56:00,416 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4839c4f8]
2018-08-29 14:56:00,437 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:00,437 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea]
2018-08-29 14:56:00,504 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 14:56:00,504 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 14:56:00,527 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 14:56:00,597 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:00,611 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea]
2018-08-29 14:56:00,611 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32dcfeea]
2018-08-29 14:56:00,619 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,619 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,619 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 14:56:00,641 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,704 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:00,704 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88]
2018-08-29 14:56:00,704 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:00,704 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:00,705 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:00,728 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:00,729 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88]
2018-08-29 14:56:00,914 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:00,926 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88] from current transaction
2018-08-29 14:56:00,926 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88]
2018-08-29 14:56:00,936 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 14:56:00,958 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:00,958 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48657e2]
2018-08-29 14:56:00,958 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:56:00,958 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 14:56:00,958 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:56:00,981 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 5
2018-08-29 14:56:00,981 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48657e2]
2018-08-29 14:56:00,981 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48657e2]
2018-08-29 14:56:00,981 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48657e2]
2018-08-29 14:56:01,019 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88] from current transaction
2018-08-29 14:56:01,020 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:01,021 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:01,065 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:01,065 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88]
2018-08-29 14:56:01,071 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 14:56:01,071 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 14:56:01,093 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 14:56:01,184 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 14:56:01,188 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:01,213 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,213 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,236 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,238 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88]
2018-08-29 14:56:01,238 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113eed88]
2018-08-29 14:56:01,331 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:01,331 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8]
2018-08-29 14:56:01,332 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:01,332 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:01,332 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:01,354 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:01,354 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8]
2018-08-29 14:56:01,508 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8] from current transaction
2018-08-29 14:56:01,509 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8]
2018-08-29 14:56:01,510 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,533 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:56:01,555 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:01,555 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db14c83]
2018-08-29 14:56:01,556 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c756669] will be managed by Spring
2018-08-29 14:56:01,556 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:56:01,556 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:56:01,578 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:56:01,578 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db14c83]
2018-08-29 14:56:01,579 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db14c83]
2018-08-29 14:56:01,579 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db14c83]
2018-08-29 14:56:01,579 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db14c83]
2018-08-29 14:56:01,594 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8] from current transaction
2018-08-29 14:56:01,595 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:01,595 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:01,642 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:01,642 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8]
2018-08-29 14:56:01,667 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 14:56:01,667 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 14:56:01,689 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 14:56:01,779 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 14:56:01,789 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:01,812 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,812 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,816 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8]
2018-08-29 14:56:01,816 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e2c6d8]
2018-08-29 14:56:01,834 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,903 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:01,916 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:01,916 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4]
2018-08-29 14:56:01,917 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:01,917 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:01,917 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:01,940 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:01,940 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4]
2018-08-29 14:56:02,120 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4] from current transaction
2018-08-29 14:56:02,120 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4]
2018-08-29 14:56:02,177 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:02,186 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4] from current transaction
2018-08-29 14:56:02,187 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:02,187 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:02,232 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:02,232 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4]
2018-08-29 14:56:02,391 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4]
2018-08-29 14:56:02,391 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77ce88c4]
2018-08-29 14:56:02,481 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:02,481 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127]
2018-08-29 14:56:02,482 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:02,482 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:02,482 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:02,504 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:02,504 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127]
2018-08-29 14:56:02,664 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127] from current transaction
2018-08-29 14:56:02,664 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127]
2018-08-29 14:56:02,761 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127] from current transaction
2018-08-29 14:56:02,761 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:02,762 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:02,806 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:02,807 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127]
2018-08-29 14:56:02,987 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127]
2018-08-29 14:56:02,987 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab66127]
2018-08-29 14:56:03,083 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:03,083 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061]
2018-08-29 14:56:03,083 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:03,083 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:03,083 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:03,106 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:03,106 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061]
2018-08-29 14:56:03,266 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061] from current transaction
2018-08-29 14:56:03,266 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061]
2018-08-29 14:56:03,348 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061] from current transaction
2018-08-29 14:56:03,349 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:03,350 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:03,396 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:03,396 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061]
2018-08-29 14:56:03,564 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061]
2018-08-29 14:56:03,564 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b5f061]
2018-08-29 14:56:03,660 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:03,660 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872]
2018-08-29 14:56:03,661 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:03,661 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:03,661 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:03,684 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:03,684 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872]
2018-08-29 14:56:03,850 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872] from current transaction
2018-08-29 14:56:03,850 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872]
2018-08-29 14:56:03,928 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872] from current transaction
2018-08-29 14:56:03,929 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:03,930 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:03,974 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:03,975 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872]
2018-08-29 14:56:04,133 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872]
2018-08-29 14:56:04,133 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f409872]
2018-08-29 14:56:04,223 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:04,223 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f]
2018-08-29 14:56:04,223 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:04,224 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:04,224 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:04,246 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:04,247 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f]
2018-08-29 14:56:04,414 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f] from current transaction
2018-08-29 14:56:04,415 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f]
2018-08-29 14:56:04,498 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f] from current transaction
2018-08-29 14:56:04,499 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:04,500 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:04,544 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:04,544 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f]
2018-08-29 14:56:04,683 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f]
2018-08-29 14:56:04,683 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a6fb62f]
2018-08-29 14:56:04,778 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:04,779 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58]
2018-08-29 14:56:04,779 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:04,779 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:04,779 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:04,802 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:04,802 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58]
2018-08-29 14:56:04,946 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58] from current transaction
2018-08-29 14:56:04,946 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58]
2018-08-29 14:56:05,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,040 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58] from current transaction
2018-08-29 14:56:05,041 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:05,041 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:05,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,086 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:05,086 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58]
2018-08-29 14:56:05,262 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58]
2018-08-29 14:56:05,262 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3356ff58]
2018-08-29 14:56:05,315 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,337 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:56:05,354 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:05,354 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f]
2018-08-29 14:56:05,354 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:05,354 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:05,354 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:05,359 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:05,360 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a655b15]
2018-08-29 14:56:05,360 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:56:05,360 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:56:05,360 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:56:05,377 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:05,377 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f]
2018-08-29 14:56:05,383 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:56:05,383 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a655b15]
2018-08-29 14:56:05,383 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a655b15]
2018-08-29 14:56:05,383 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a655b15]
2018-08-29 14:56:05,383 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a655b15]
2018-08-29 14:56:05,472 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 14:56:05,472 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 14:56:05,495 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 14:56:05,566 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f] from current transaction
2018-08-29 14:56:05,566 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f]
2018-08-29 14:56:05,584 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:05,585 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 14:56:05,607 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,608 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,630 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,658 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f] from current transaction
2018-08-29 14:56:05,658 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:05,658 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:05,698 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:05,703 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:05,703 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f]
2018-08-29 14:56:05,855 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f]
2018-08-29 14:56:05,855 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a46b0f]
2018-08-29 14:56:05,949 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:05,950 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e]
2018-08-29 14:56:05,950 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:05,950 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:05,950 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:05,968 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:05,973 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:05,973 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e]
2018-08-29 14:56:06,144 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e] from current transaction
2018-08-29 14:56:06,145 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e]
2018-08-29 14:56:06,222 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e] from current transaction
2018-08-29 14:56:06,223 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:06,224 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:06,269 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:06,269 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e]
2018-08-29 14:56:06,463 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e]
2018-08-29 14:56:06,463 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d16209e]
2018-08-29 14:56:06,559 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:06,559 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0]
2018-08-29 14:56:06,559 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:06,560 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:06,560 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:06,582 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:06,583 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0]
2018-08-29 14:56:06,752 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0] from current transaction
2018-08-29 14:56:06,753 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0]
2018-08-29 14:56:06,838 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0] from current transaction
2018-08-29 14:56:06,838 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:06,839 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:06,883 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:06,884 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0]
2018-08-29 14:56:07,046 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0]
2018-08-29 14:56:07,046 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d0114c0]
2018-08-29 14:56:07,138 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:07,139 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd]
2018-08-29 14:56:07,139 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:07,139 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:07,139 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:07,167 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:07,167 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd]
2018-08-29 14:56:07,306 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd] from current transaction
2018-08-29 14:56:07,307 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd]
2018-08-29 14:56:07,384 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd] from current transaction
2018-08-29 14:56:07,384 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:07,384 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:07,428 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:07,428 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd]
2018-08-29 14:56:07,616 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd]
2018-08-29 14:56:07,616 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6713dd]
2018-08-29 14:56:07,708 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:07,709 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7]
2018-08-29 14:56:07,709 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:07,709 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:07,709 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:07,731 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:07,731 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7]
2018-08-29 14:56:07,876 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7] from current transaction
2018-08-29 14:56:07,876 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7]
2018-08-29 14:56:07,956 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7] from current transaction
2018-08-29 14:56:07,956 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:07,956 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:08,001 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:08,001 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7]
2018-08-29 14:56:08,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,188 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7]
2018-08-29 14:56:08,188 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c3f7]
2018-08-29 14:56:08,292 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:08,292 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19]
2018-08-29 14:56:08,292 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:08,292 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:08,292 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:08,315 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:08,315 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19]
2018-08-29 14:56:08,333 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,355 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 14:56:08,379 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:08,379 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43794ad5]
2018-08-29 14:56:08,379 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:56:08,379 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 14:56:08,379 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 14:56:08,401 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43794ad5]
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":4}
2018-08-29 14:56:08,402 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 14:56:08,426 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 14:56:08,427 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43794ad5]
2018-08-29 14:56:08,427 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43794ad5]
2018-08-29 14:56:08,427 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43794ad5]
2018-08-29 14:56:08,515 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 14:56:08,515 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 14:56:08,537 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 14:56:08,543 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19] from current transaction
2018-08-29 14:56:08,544 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19]
2018-08-29 14:56:08,604 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:08,624 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19] from current transaction
2018-08-29 14:56:08,624 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:08,625 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:08,627 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 14:56:08,649 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,649 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,669 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:08,669 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19]
2018-08-29 14:56:08,671 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,738 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:08,839 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19]
2018-08-29 14:56:08,839 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c16f19]
2018-08-29 14:56:08,929 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:08,929 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d]
2018-08-29 14:56:08,929 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:08,929 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:08,929 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:08,951 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:08,951 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d]
2018-08-29 14:56:09,007 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:09,097 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d] from current transaction
2018-08-29 14:56:09,098 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d]
2018-08-29 14:56:09,190 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d] from current transaction
2018-08-29 14:56:09,190 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:09,190 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:09,234 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:09,234 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d]
2018-08-29 14:56:09,414 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d]
2018-08-29 14:56:09,414 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c6bba7d]
2018-08-29 14:56:09,507 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:09,507 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3]
2018-08-29 14:56:09,507 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:09,508 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:09,508 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:09,530 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:09,530 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3]
2018-08-29 14:56:09,680 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3] from current transaction
2018-08-29 14:56:09,680 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3]
2018-08-29 14:56:09,746 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3] from current transaction
2018-08-29 14:56:09,746 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:09,746 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:09,790 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:09,790 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3]
2018-08-29 14:56:09,958 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3]
2018-08-29 14:56:09,958 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6d1ff3]
2018-08-29 14:56:10,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,053 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:10,053 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d]
2018-08-29 14:56:10,053 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:10,053 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:10,053 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:10,075 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:10,075 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d]
2018-08-29 14:56:10,262 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d] from current transaction
2018-08-29 14:56:10,262 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d]
2018-08-29 14:56:10,313 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,336 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 14:56:10,356 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d] from current transaction
2018-08-29 14:56:10,356 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:10,356 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:10,358 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:10,358 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d6ebbe]
2018-08-29 14:56:10,359 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@26874f2c] will be managed by Spring
2018-08-29 14:56:10,359 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 14:56:10,359 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 14:56:10,381 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 14:56:10,381 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d6ebbe]
2018-08-29 14:56:10,381 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d6ebbe]
2018-08-29 14:56:10,381 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d6ebbe]
2018-08-29 14:56:10,381 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d6ebbe]
2018-08-29 14:56:10,400 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:10,400 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d]
2018-08-29 14:56:10,470 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 14:56:10,470 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 14:56:10,492 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 14:56:10,582 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:10,582 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d]
2018-08-29 14:56:10,583 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17884d]
2018-08-29 14:56:10,583 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 14:56:10,604 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,604 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,626 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,676 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:10,676 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da]
2018-08-29 14:56:10,676 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:10,676 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:10,676 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:10,694 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 14:56:10,698 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:10,698 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da]
2018-08-29 14:56:10,866 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da] from current transaction
2018-08-29 14:56:10,866 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da]
2018-08-29 14:56:10,950 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da] from current transaction
2018-08-29 14:56:10,950 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:10,950 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:10,963 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 14:56:10,994 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:10,994 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da]
2018-08-29 14:56:11,166 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da]
2018-08-29 14:56:11,166 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322b09da]
2018-08-29 14:56:11,256 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:11,256 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece]
2018-08-29 14:56:11,256 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:11,256 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:11,256 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:11,280 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:11,280 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece]
2018-08-29 14:56:11,432 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece] from current transaction
2018-08-29 14:56:11,432 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece]
2018-08-29 14:56:11,508 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece] from current transaction
2018-08-29 14:56:11,509 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:11,509 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:11,554 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:11,554 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece]
2018-08-29 14:56:11,735 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece]
2018-08-29 14:56:11,735 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be80ece]
2018-08-29 14:56:11,828 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:11,829 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f]
2018-08-29 14:56:11,829 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:11,829 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:11,829 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:11,851 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:11,851 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f]
2018-08-29 14:56:12,000 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f] from current transaction
2018-08-29 14:56:12,000 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f]
2018-08-29 14:56:12,072 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f] from current transaction
2018-08-29 14:56:12,073 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:12,073 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:12,117 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:12,117 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f]
2018-08-29 14:56:12,291 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f]
2018-08-29 14:56:12,291 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c72189f]
2018-08-29 14:56:12,388 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:12,388 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6]
2018-08-29 14:56:12,388 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:12,388 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:12,388 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:12,410 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:12,411 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6]
2018-08-29 14:56:12,551 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6] from current transaction
2018-08-29 14:56:12,551 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6]
2018-08-29 14:56:12,627 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6] from current transaction
2018-08-29 14:56:12,628 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:12,628 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:12,672 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:12,672 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6]
2018-08-29 14:56:12,815 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6]
2018-08-29 14:56:12,815 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76af51d6]
2018-08-29 14:56:12,906 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:12,906 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b]
2018-08-29 14:56:12,906 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:12,906 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:12,906 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:12,928 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:12,928 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b]
2018-08-29 14:56:13,096 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b] from current transaction
2018-08-29 14:56:13,096 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b]
2018-08-29 14:56:13,166 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b] from current transaction
2018-08-29 14:56:13,167 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:13,167 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:13,212 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:13,213 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b]
2018-08-29 14:56:13,369 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b]
2018-08-29 14:56:13,369 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e2fe3b]
2018-08-29 14:56:13,459 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:13,460 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482]
2018-08-29 14:56:13,460 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:13,460 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:13,460 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:13,482 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:13,482 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482]
2018-08-29 14:56:13,652 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482] from current transaction
2018-08-29 14:56:13,653 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482]
2018-08-29 14:56:13,735 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482] from current transaction
2018-08-29 14:56:13,735 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:13,736 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 14:56:13,781 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - <==    Updates: 1
2018-08-29 14:56:13,781 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482]
2018-08-29 14:56:13,953 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482]
2018-08-29 14:56:13,953 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321e482]
2018-08-29 14:56:14,045 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 14:56:14,045 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49190ed6]
2018-08-29 14:56:14,045 [main] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@5d3d77c7] will be managed by Spring
2018-08-29 14:56:14,045 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==>  Preparing: SELECT block_hash AS blockHash,height FROM coin_dark.block ORDER BY height DESC LIMIT 1; 
2018-08-29 14:56:14,046 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - ==> Parameters: 
2018-08-29 14:56:14,068 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.queryLastBlock - <==      Total: 1
2018-08-29 14:56:14,068 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49190ed6]
2018-08-29 14:56:14,245 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49190ed6] from current transaction
2018-08-29 14:56:14,245 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49190ed6]
2018-08-29 14:56:14,334 [main] [DEBUG] org.mybatis.spring.SqlSessionUtils - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49190ed6] from current transaction
2018-08-29 14:56:14,334 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==>  Preparing: INSERT INTO coin_dark.block (`block_hash`,`previous_block_hash`,`merkleroot`,`chainwork`,`size`,`height`,`version`,`time`,`median_time`,`bits`,`nonce`,`difficulty`,`create_ts`) VALUES (?,?,?,?,?,?,?,?,?, ?,?,?,now()) 
2018-08-29 14:56:14,334 [main] [DEBUG] com.ora.blockchain.mybatis.mapper.block.BlockMapper.insertBlock - ==> Parameters: 0000000000000017f33d2ff48bf4bf1109b66ae756dc3a07f0dad7fb1bb7dc34(String), 000000000000004eeed84b0601a314e90bd48869c1e3107ef6590849cb07b362(String), 1399668371bcdf366a8adc59d50c233aa991b4affa36ae7fec2ca8603bd5f31d(String), 00000000000000000000000000000000000000000000099600d10ab3a13ececa(String), 692(Long), 917443(Long), 536870912(Long), 1533802470(Long), 1533801972(Long), 194e8cd6(String), 1538546124(Long), 5.46772003102181E7(String)
2018-08-29 15:07:05,930 [background-preinit] [DEBUG] org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2018-08-29 15:07:05,940 [background-preinit] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:07:17,877 [main] [DEBUG] com.ora.blockchain.Application - Running with Spring Boot v1.5.8.RELEASE, Spring v4.3.12.RELEASE
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/block/BlockMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/block/EthereumBlockMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/common/ScanCursorMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/input/InputMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/output/OutputMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/EthereumERC20Mapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/EthereumTransactionMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/TransactionMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletAccountBalanceMapper.class]
2018-08-29 15:07:18,207 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletAccountBindMapper.class]
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletMapper.class]
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'blockMapper' and 'com.ora.blockchain.mybatis.mapper.block.BlockMapper' mapperInterface
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'blockMapper'.
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumBlockMapper' and 'com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper' mapperInterface
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumBlockMapper'.
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'scanCursorMapper' and 'com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper' mapperInterface
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'scanCursorMapper'.
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'inputMapper' and 'com.ora.blockchain.mybatis.mapper.input.InputMapper' mapperInterface
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'inputMapper'.
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'outputMapper' and 'com.ora.blockchain.mybatis.mapper.output.OutputMapper' mapperInterface
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'outputMapper'.
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumERC20Mapper' and 'com.ora.blockchain.mybatis.mapper.transaction.EthereumERC20Mapper' mapperInterface
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumERC20Mapper'.
2018-08-29 15:07:18,208 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumTransactionMapper' and 'com.ora.blockchain.mybatis.mapper.transaction.EthereumTransactionMapper' mapperInterface
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumTransactionMapper'.
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'transactionMapper' and 'com.ora.blockchain.mybatis.mapper.transaction.TransactionMapper' mapperInterface
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'transactionMapper'.
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletAccountBalanceMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletAccountBalanceMapper' mapperInterface
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletAccountBalanceMapper'.
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletAccountBindMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletAccountBindMapper' mapperInterface
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletAccountBindMapper'.
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletMapper' mapperInterface
2018-08-29 15:07:18,209 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletMapper'.
2018-08-29 15:07:18,566 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:07:18,570 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:07:18,571 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-08-29 15:07:18,572 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-08-29 15:07:18,572 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy72
2018-08-29 15:07:18,573 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-08-29 15:07:18,574 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2018-08-29 15:07:18,574 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2018-08-29 15:07:18,574 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-08-29 15:07:18,574 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2018-08-29 15:09:39,537 [background-preinit] [DEBUG] org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2018-08-29 15:09:39,551 [background-preinit] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:09:51,468 [main] [DEBUG] com.ora.blockchain.Application - Running with Spring Boot v1.5.8.RELEASE, Spring v4.3.12.RELEASE
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/block/BlockMapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/block/EthereumBlockMapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/common/ScanCursorMapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/input/InputMapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/output/OutputMapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/EthereumERC20Mapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/EthereumTransactionMapper.class]
2018-08-29 15:09:51,832 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/transaction/TransactionMapper.class]
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletAccountBalanceMapper.class]
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletAccountBindMapper.class]
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Identified candidate component class: file [/root/Documents/workspace/blockchain/byd-schedule-service/target/classes/com/ora/blockchain/mybatis/mapper/wallet/WalletMapper.class]
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'blockMapper' and 'com.ora.blockchain.mybatis.mapper.block.BlockMapper' mapperInterface
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'blockMapper'.
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumBlockMapper' and 'com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper' mapperInterface
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumBlockMapper'.
2018-08-29 15:09:51,833 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'scanCursorMapper' and 'com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'scanCursorMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'inputMapper' and 'com.ora.blockchain.mybatis.mapper.input.InputMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'inputMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'outputMapper' and 'com.ora.blockchain.mybatis.mapper.output.OutputMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'outputMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumERC20Mapper' and 'com.ora.blockchain.mybatis.mapper.transaction.EthereumERC20Mapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumERC20Mapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'ethereumTransactionMapper' and 'com.ora.blockchain.mybatis.mapper.transaction.EthereumTransactionMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'ethereumTransactionMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'transactionMapper' and 'com.ora.blockchain.mybatis.mapper.transaction.TransactionMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'transactionMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletAccountBalanceMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletAccountBalanceMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletAccountBalanceMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletAccountBindMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletAccountBindMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletAccountBindMapper'.
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Creating MapperFactoryBean with name 'walletMapper' and 'com.ora.blockchain.mybatis.mapper.wallet.WalletMapper' mapperInterface
2018-08-29 15:09:51,834 [main] [DEBUG] org.mybatis.spring.mapper.ClassPathMapperScanner - Enabling autowire by type for MapperFactoryBean with name 'walletMapper'.
2018-08-29 15:09:52,209 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:09:52,213 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:09:52,215 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-08-29 15:09:52,215 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-08-29 15:09:52,216 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy72
2018-08-29 15:09:52,216 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-08-29 15:09:52,217 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2018-08-29 15:09:52,217 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2018-08-29 15:09:52,217 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-08-29 15:09:52,217 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2018-08-29 15:10:05,325 [main] [DEBUG] org.mybatis.spring.SqlSessionFactoryBean - Property 'mapperLocations' was not specified or no matching resources found
2018-08-29 15:10:05,973 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:10:05,976 [main] [DEBUG] org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.engine.ConfigurationImpl - Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy72
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.xml.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-08-29 15:10:05,977 [main] [DEBUG] org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2018-08-29 15:10:06,279 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' is desired by: main
2018-08-29 15:10:06,280 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' is being obtained: main
2018-08-29 15:10:06,281 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' given to: main
2018-08-29 15:10:06,286 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: main
2018-08-29 15:10:06,286 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: main
2018-08-29 15:10:06,287 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: main
2018-08-29 15:10:06,299 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: main
2018-08-29 15:10:06,299 [main] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'STATE_ACCESS' returned by: main
2018-08-29 15:10:06,302 [QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler
2018-08-29 15:10:06,303 [QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler
2018-08-29 15:10:06,303 [QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler
2018-08-29 15:10:06,343 [QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: QuartzScheduler_schedulerFactoryBean-bogon1535526604414_MisfireHandler
2018-08-29 15:10:06,354 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:06,355 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,355 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,356 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,368 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,372 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:06,379 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:06,381 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85d4195]
2018-08-29 15:10:06,382 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:06,383 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,383 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,384 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,391 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:10:06,393 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:06,396 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,397 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:06,398 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:06,405 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:06,405 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85d4195]
2018-08-29 15:10:06,408 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:06,408 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:06,408 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa062b3]
2018-08-29 15:10:06,408 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:06,408 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:06,409 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:06,410 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:06,410 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa062b3]
2018-08-29 15:10:06,410 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa062b3]
2018-08-29 15:10:06,410 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa062b3]
2018-08-29 15:10:06,410 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa062b3]
2018-08-29 15:10:06,412 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,412 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,413 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,424 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,425 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:06,425 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:10:06,425 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 15:10:06,426 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:10:06,431 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:06,442 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a49c6e1]
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:06,444 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":0}
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a49c6e1]
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a49c6e1]
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a49c6e1]
2018-08-29 15:10:06,445 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a49c6e1]
2018-08-29 15:10:06,447 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,447 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,448 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,452 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,453 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:06,453 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:10:06,454 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:10:06,459 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:06,469 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:06,469 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,469 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,470 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,472 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:06,474 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85d4195]
2018-08-29 15:10:06,474 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85d4195]
2018-08-29 15:10:06,474 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85d4195]
2018-08-29 15:10:06,476 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:06,476 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:10:06,477 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:10:06,477 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,482 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:06,488 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:06,488 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,488 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,489 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,493 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:06,505 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:08,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:08,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e875a]
2018-08-29 15:10:08,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:10:08,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:08,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:08,022 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:08,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e875a]
2018-08-29 15:10:08,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:08,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:08,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:08,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:08,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}
2018-08-29 15:10:08,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:08,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:08,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:08,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e875a]
2018-08-29 15:10:08,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e875a]
2018-08-29 15:10:08,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e875a]
2018-08-29 15:10:08,055 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:08,055 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:10:08,056 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:10:08,062 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:08,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,069 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:08,085 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,019 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:10,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:10,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a4164a8]
2018-08-29 15:10:10,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:10:10,023 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:10,023 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:10,024 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:10,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a4164a8]
2018-08-29 15:10:10,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a4164a8]
2018-08-29 15:10:10,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a4164a8]
2018-08-29 15:10:10,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a4164a8]
2018-08-29 15:10:10,028 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:10,028 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:10:10,029 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:10:10,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:10,037 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:10,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:10,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e77bb8c]
2018-08-29 15:10:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:10:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:15,026 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:15,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e77bb8c]
2018-08-29 15:10:15,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e77bb8c]
2018-08-29 15:10:15,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e77bb8c]
2018-08-29 15:10:15,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e77bb8c]
2018-08-29 15:10:15,030 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:15,030 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:10:15,031 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:10:15,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:15,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:15,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,046 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:15,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,019 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:16,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:16,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d3812e]
2018-08-29 15:10:16,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:10:16,022 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:16,023 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:16,024 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:16,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d3812e]
2018-08-29 15:10:16,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:16,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:16,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:16,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:16,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":2}
2018-08-29 15:10:16,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:16,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:16,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:16,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d3812e]
2018-08-29 15:10:16,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d3812e]
2018-08-29 15:10:16,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d3812e]
2018-08-29 15:10:16,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:16,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:10:16,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:10:16,061 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:16,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:16,082 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,020 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:20,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:20,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20731151]
2018-08-29 15:10:20,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:10:20,023 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:20,024 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20731151]
2018-08-29 15:10:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20731151]
2018-08-29 15:10:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20731151]
2018-08-29 15:10:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20731151]
2018-08-29 15:10:20,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:20,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:10:20,029 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:10:20,037 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:20,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:20,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:20,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:24,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:24,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585f1113]
2018-08-29 15:10:24,025 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:24,025 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:24,025 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:24,026 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:24,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585f1113]
2018-08-29 15:10:24,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:24,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:24,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:24,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:24,028 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":3}
2018-08-29 15:10:24,028 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:24,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:24,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:24,053 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585f1113]
2018-08-29 15:10:24,053 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585f1113]
2018-08-29 15:10:24,053 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585f1113]
2018-08-29 15:10:24,058 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:24,058 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:10:24,059 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:10:24,065 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:24,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,067 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:24,087 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:25,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:25,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3714918f]
2018-08-29 15:10:25,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:25,025 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:25,025 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:25,027 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:25,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3714918f]
2018-08-29 15:10:25,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3714918f]
2018-08-29 15:10:25,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3714918f]
2018-08-29 15:10:25,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3714918f]
2018-08-29 15:10:25,030 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:25,030 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:10:25,031 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:10:25,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:25,038 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:25,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:25,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:30,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:30,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a588d]
2018-08-29 15:10:30,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:30,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:30,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a588d]
2018-08-29 15:10:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a588d]
2018-08-29 15:10:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a588d]
2018-08-29 15:10:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a588d]
2018-08-29 15:10:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:10:30,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:10:30,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:30,029 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:30,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:30,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,019 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:32,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:32,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762f573c]
2018-08-29 15:10:32,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:32,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:32,022 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:32,023 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762f573c]
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":4}
2018-08-29 15:10:32,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:32,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:32,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:32,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762f573c]
2018-08-29 15:10:32,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762f573c]
2018-08-29 15:10:32,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762f573c]
2018-08-29 15:10:32,053 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:32,053 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:10:32,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:10:32,060 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:32,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,065 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:32,077 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:35,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:35,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ed9c31]
2018-08-29 15:10:35,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:35,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:35,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:35,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:35,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ed9c31]
2018-08-29 15:10:35,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ed9c31]
2018-08-29 15:10:35,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ed9c31]
2018-08-29 15:10:35,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ed9c31]
2018-08-29 15:10:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:10:35,026 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:10:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:35,032 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:35,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:35,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:40,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:40,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ce35c4]
2018-08-29 15:10:40,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:40,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:40,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:40,022 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:40,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ce35c4]
2018-08-29 15:10:40,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:40,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:40,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:40,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:40,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":5}
2018-08-29 15:10:40,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:40,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:40,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:40,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ce35c4]
2018-08-29 15:10:40,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ce35c4]
2018-08-29 15:10:40,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ce35c4]
2018-08-29 15:10:40,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:40,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:40,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:10:40,052 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:10:40,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:40,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2d7cfa]
2018-08-29 15:10:40,053 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:10:40,053 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:40,053 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:40,054 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:40,054 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2d7cfa]
2018-08-29 15:10:40,054 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2d7cfa]
2018-08-29 15:10:40,054 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2d7cfa]
2018-08-29 15:10:40,054 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2d7cfa]
2018-08-29 15:10:40,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:10:40,057 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:40,057 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:10:40,058 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:10:40,058 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:40,063 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:40,069 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:40,086 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,012 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,013 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:45,013 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:45,013 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f3c639]
2018-08-29 15:10:45,013 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:10:45,014 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:45,014 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:45,015 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:45,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f3c639]
2018-08-29 15:10:45,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f3c639]
2018-08-29 15:10:45,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f3c639]
2018-08-29 15:10:45,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f3c639]
2018-08-29 15:10:45,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:45,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:10:45,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:10:45,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:45,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:10:45,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:45,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:48,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:48,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@583645f0]
2018-08-29 15:10:48,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:10:48,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:48,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:48,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@583645f0]
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":6}
2018-08-29 15:10:48,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:48,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:48,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:48,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@583645f0]
2018-08-29 15:10:48,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@583645f0]
2018-08-29 15:10:48,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@583645f0]
2018-08-29 15:10:48,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:48,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:10:48,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:10:48,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:10:48,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:48,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdb8d92]
2018-08-29 15:10:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:10:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:50,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:50,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdb8d92]
2018-08-29 15:10:50,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdb8d92]
2018-08-29 15:10:50,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdb8d92]
2018-08-29 15:10:50,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fdb8d92]
2018-08-29 15:10:50,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:50,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:10:50,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:10:50,030 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:10:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:50,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:10:55,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:55,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbb8d05]
2018-08-29 15:10:55,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:55,023 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:10:55,023 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:10:55,024 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:10:55,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbb8d05]
2018-08-29 15:10:55,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbb8d05]
2018-08-29 15:10:55,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbb8d05]
2018-08-29 15:10:55,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbb8d05]
2018-08-29 15:10:55,026 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:55,026 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:10:55,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:10:55,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:55,033 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:10:55,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:55,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:10:56,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:10:56,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51fe27a3]
2018-08-29 15:10:56,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:10:56,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:10:56,022 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:10:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:10:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51fe27a3]
2018-08-29 15:10:56,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:10:56,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:10:56,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:10:56,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:10:56,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":7}
2018-08-29 15:10:56,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:10:56,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:10:56,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:10:56,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51fe27a3]
2018-08-29 15:10:56,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51fe27a3]
2018-08-29 15:10:56,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51fe27a3]
2018-08-29 15:10:56,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:56,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:10:56,053 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:10:56,058 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:10:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:10:56,077 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:00,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e933e45]
2018-08-29 15:11:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e933e45]
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":8}
2018-08-29 15:11:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:11:00,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:00,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,038 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:00,038 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:00,038 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379d6098]
2018-08-29 15:11:00,038 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:00,038 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:00,038 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:00,039 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:00,039 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379d6098]
2018-08-29 15:11:00,039 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379d6098]
2018-08-29 15:11:00,039 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379d6098]
2018-08-29 15:11:00,039 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379d6098]
2018-08-29 15:11:00,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:11:00,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:00,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e933e45]
2018-08-29 15:11:00,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e933e45]
2018-08-29 15:11:00,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e933e45]
2018-08-29 15:11:00,041 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:00,041 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:11:00,042 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:11:00,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:00,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:11:00,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:11:00,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:00,049 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:00,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:00,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:00,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:05,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:05,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5c881a]
2018-08-29 15:11:05,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:05,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:05,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:05,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:05,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5c881a]
2018-08-29 15:11:05,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5c881a]
2018-08-29 15:11:05,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5c881a]
2018-08-29 15:11:05,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5c881a]
2018-08-29 15:11:05,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:05,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:11:05,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:11:05,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:05,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:05,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:05,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472514e9]
2018-08-29 15:11:08,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:08,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:08,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472514e9]
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 63
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":9}
2018-08-29 15:11:08,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (63-byte body)
2018-08-29 15:11:08,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:08,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:08,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472514e9]
2018-08-29 15:11:08,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472514e9]
2018-08-29 15:11:08,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472514e9]
2018-08-29 15:11:08,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:08,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:11:08,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:11:08,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:08,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:08,065 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:10,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:10,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1416d9]
2018-08-29 15:11:10,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:10,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:10,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:10,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:10,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1416d9]
2018-08-29 15:11:10,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1416d9]
2018-08-29 15:11:10,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1416d9]
2018-08-29 15:11:10,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1416d9]
2018-08-29 15:11:10,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:10,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:11:10,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:11:10,030 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:10,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:10,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:10,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:15,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:15,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e525a8a]
2018-08-29 15:11:15,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:15,022 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:15,022 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:15,023 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:15,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e525a8a]
2018-08-29 15:11:15,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e525a8a]
2018-08-29 15:11:15,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e525a8a]
2018-08-29 15:11:15,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e525a8a]
2018-08-29 15:11:15,026 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:15,026 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:11:15,027 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:11:15,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:15,033 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:15,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:15,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:16,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:16,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d232c18]
2018-08-29 15:11:16,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:16,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:16,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d232c18]
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":10}
2018-08-29 15:11:16,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:11:16,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:16,042 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:16,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d232c18]
2018-08-29 15:11:16,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d232c18]
2018-08-29 15:11:16,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d232c18]
2018-08-29 15:11:16,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:16,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:11:16,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:11:16,051 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:16,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:16,069 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:20,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:20,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac2479a]
2018-08-29 15:11:20,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:20,025 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:20,026 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:20,026 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac2479a]
2018-08-29 15:11:20,026 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac2479a]
2018-08-29 15:11:20,027 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac2479a]
2018-08-29 15:11:20,027 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac2479a]
2018-08-29 15:11:20,029 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:20,030 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:11:20,030 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:11:20,037 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:20,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:20,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:20,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:24,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:24,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7190ffc]
2018-08-29 15:11:24,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:24,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:24,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:24,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7190ffc]
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":11}
2018-08-29 15:11:24,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:11:24,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:24,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:24,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7190ffc]
2018-08-29 15:11:24,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7190ffc]
2018-08-29 15:11:24,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7190ffc]
2018-08-29 15:11:24,052 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:24,052 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:11:24,053 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:11:24,058 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:24,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:24,077 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:25,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:25,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:25,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21b53240]
2018-08-29 15:11:25,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:25,017 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:25,017 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:25,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:25,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21b53240]
2018-08-29 15:11:25,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21b53240]
2018-08-29 15:11:25,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21b53240]
2018-08-29 15:11:25,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21b53240]
2018-08-29 15:11:25,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:25,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:11:25,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:11:25,028 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:25,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:25,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:25,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:30,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:30,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3a8e7e]
2018-08-29 15:11:30,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:30,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:30,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:30,022 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:30,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3a8e7e]
2018-08-29 15:11:30,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3a8e7e]
2018-08-29 15:11:30,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3a8e7e]
2018-08-29 15:11:30,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3a8e7e]
2018-08-29 15:11:30,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:30,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:11:30,026 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:11:30,031 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:30,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:30,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:30,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:32,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:32,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:32,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f84660a]
2018-08-29 15:11:32,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:32,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:32,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f84660a]
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:32,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":12}
2018-08-29 15:11:32,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:11:32,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:32,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:32,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f84660a]
2018-08-29 15:11:32,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f84660a]
2018-08-29 15:11:32,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f84660a]
2018-08-29 15:11:32,048 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:32,049 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:11:32,049 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:11:32,055 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:32,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:32,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:35,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:35,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fe35e8a]
2018-08-29 15:11:35,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:35,023 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:35,023 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fe35e8a]
2018-08-29 15:11:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fe35e8a]
2018-08-29 15:11:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fe35e8a]
2018-08-29 15:11:35,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fe35e8a]
2018-08-29 15:11:35,027 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:35,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:11:35,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:11:35,040 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:35,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:35,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,043 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:35,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:40,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:40,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341d53e2]
2018-08-29 15:11:40,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:11:40,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:40,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:40,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:40,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341d53e2]
2018-08-29 15:11:40,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:40,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:40,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:11:40,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:40,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":13}
2018-08-29 15:11:40,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:11:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:40,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:40,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341d53e2]
2018-08-29 15:11:40,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341d53e2]
2018-08-29 15:11:40,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341d53e2]
2018-08-29 15:11:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17dbefdc]
2018-08-29 15:11:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:40,045 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:40,045 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:40,046 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:40,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17dbefdc]
2018-08-29 15:11:40,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17dbefdc]
2018-08-29 15:11:40,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17dbefdc]
2018-08-29 15:11:40,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17dbefdc]
2018-08-29 15:11:40,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:40,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:11:40,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:11:40,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:40,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:11:40,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:11:40,053 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:40,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:40,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,057 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:40,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:45,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:45,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f345ac4]
2018-08-29 15:11:45,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:45,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:45,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:45,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:45,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f345ac4]
2018-08-29 15:11:45,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f345ac4]
2018-08-29 15:11:45,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f345ac4]
2018-08-29 15:11:45,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f345ac4]
2018-08-29 15:11:45,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:45,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:11:45,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:11:45,031 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:11:45,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:45,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:45,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:48,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:48,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740516e5]
2018-08-29 15:11:48,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:48,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:48,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740516e5]
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:48,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":14}
2018-08-29 15:11:48,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:11:48,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:48,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:48,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740516e5]
2018-08-29 15:11:48,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740516e5]
2018-08-29 15:11:48,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@740516e5]
2018-08-29 15:11:48,050 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:48,050 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:11:48,051 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:11:48,056 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:11:48,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:48,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:50,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:50,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e25f264]
2018-08-29 15:11:50,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:50,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:50,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e25f264]
2018-08-29 15:11:50,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e25f264]
2018-08-29 15:11:50,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e25f264]
2018-08-29 15:11:50,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e25f264]
2018-08-29 15:11:50,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:50,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:11:50,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:11:50,029 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:11:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:50,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:11:55,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:55,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785a5baa]
2018-08-29 15:11:55,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:55,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:11:55,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:11:55,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:11:55,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785a5baa]
2018-08-29 15:11:55,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785a5baa]
2018-08-29 15:11:55,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785a5baa]
2018-08-29 15:11:55,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785a5baa]
2018-08-29 15:11:55,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:55,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:11:55,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:11:55,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:55,029 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:11:55,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:55,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:11:56,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:11:56,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11216c5f]
2018-08-29 15:11:56,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:11:56,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:11:56,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:11:56,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:11:56,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11216c5f]
2018-08-29 15:11:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:11:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:11:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:11:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:11:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":15}
2018-08-29 15:11:56,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:11:56,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:11:56,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:11:56,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11216c5f]
2018-08-29 15:11:56,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11216c5f]
2018-08-29 15:11:56,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11216c5f]
2018-08-29 15:11:56,051 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:56,051 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:11:56,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:11:56,057 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:11:56,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:11:56,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:00,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:00,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cf91c7]
2018-08-29 15:12:00,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:00,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:00,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:00,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cf91c7]
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":16}
2018-08-29 15:12:00,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,043 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,043 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:00,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cf91c7]
2018-08-29 15:12:00,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cf91c7]
2018-08-29 15:12:00,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48cf91c7]
2018-08-29 15:12:00,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 15:12:00,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:00,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea94b6b]
2018-08-29 15:12:00,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:00,045 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 15:12:00,045 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea94b6b]
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea94b6b]
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea94b6b]
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea94b6b]
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:00,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:12:00,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:12:00,048 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:00,048 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:12:00,050 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:12:00,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:00,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:00,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,055 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:00,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,067 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:00,067 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:00,067 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4c5531]
2018-08-29 15:12:00,068 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:00,068 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:00,068 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:00,069 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:00,069 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4c5531]
2018-08-29 15:12:00,069 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4c5531]
2018-08-29 15:12:00,069 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4c5531]
2018-08-29 15:12:00,069 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4c5531]
2018-08-29 15:12:00,070 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:00,071 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:12:00,071 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:12:00,076 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:00,078 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:00,078 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,078 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,079 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,082 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:00,092 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:05,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:05,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f5da]
2018-08-29 15:12:05,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:05,023 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:05,024 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:05,025 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:05,025 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f5da]
2018-08-29 15:12:05,025 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f5da]
2018-08-29 15:12:05,025 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f5da]
2018-08-29 15:12:05,025 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f5da]
2018-08-29 15:12:05,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:05,028 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:12:05,028 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:12:05,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:05,035 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:05,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:05,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:08,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:08,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@725d8dcf]
2018-08-29 15:12:08,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:08,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:08,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:08,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@725d8dcf]
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":17}
2018-08-29 15:12:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:08,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:08,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:08,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@725d8dcf]
2018-08-29 15:12:08,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@725d8dcf]
2018-08-29 15:12:08,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@725d8dcf]
2018-08-29 15:12:08,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:08,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:12:08,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:12:08,054 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:08,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:08,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d3980a]
2018-08-29 15:12:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:10,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:10,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d3980a]
2018-08-29 15:12:10,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d3980a]
2018-08-29 15:12:10,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d3980a]
2018-08-29 15:12:10,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d3980a]
2018-08-29 15:12:10,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:10,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:12:10,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:12:10,030 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:10,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:10,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:10,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:15,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:15,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fdf74c9]
2018-08-29 15:12:15,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:15,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:15,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:15,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:15,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fdf74c9]
2018-08-29 15:12:15,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fdf74c9]
2018-08-29 15:12:15,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fdf74c9]
2018-08-29 15:12:15,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fdf74c9]
2018-08-29 15:12:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:12:15,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:12:15,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:15,031 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:15,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:15,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742c7c8a]
2018-08-29 15:12:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:16,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742c7c8a]
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":18}
2018-08-29 15:12:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:16,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:16,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:16,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742c7c8a]
2018-08-29 15:12:16,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742c7c8a]
2018-08-29 15:12:16,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742c7c8a]
2018-08-29 15:12:16,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:16,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:12:16,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:12:16,055 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:16,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:16,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bac10f]
2018-08-29 15:12:20,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:20,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:20,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bac10f]
2018-08-29 15:12:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bac10f]
2018-08-29 15:12:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bac10f]
2018-08-29 15:12:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bac10f]
2018-08-29 15:12:20,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:20,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:12:20,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:12:20,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:20,030 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:20,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,011 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,012 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:24,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:24,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c77404]
2018-08-29 15:12:24,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:24,013 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:24,013 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:24,013 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c77404]
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":19}
2018-08-29 15:12:24,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:24,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:24,036 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:24,036 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c77404]
2018-08-29 15:12:24,036 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c77404]
2018-08-29 15:12:24,036 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c77404]
2018-08-29 15:12:24,039 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:24,039 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:12:24,039 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:12:24,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:24,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:24,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,016 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:25,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:25,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@490935a6]
2018-08-29 15:12:25,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:25,017 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:25,017 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@490935a6]
2018-08-29 15:12:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@490935a6]
2018-08-29 15:12:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@490935a6]
2018-08-29 15:12:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@490935a6]
2018-08-29 15:12:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:12:25,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:12:25,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:25,029 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:25,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:25,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@253b3a76]
2018-08-29 15:12:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:12:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:30,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@253b3a76]
2018-08-29 15:12:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@253b3a76]
2018-08-29 15:12:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@253b3a76]
2018-08-29 15:12:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@253b3a76]
2018-08-29 15:12:30,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:30,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:12:30,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:12:30,030 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:30,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:32,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fa6ce65]
2018-08-29 15:12:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:12:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:32,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fa6ce65]
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":20}
2018-08-29 15:12:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:32,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:32,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:32,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fa6ce65]
2018-08-29 15:12:32,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fa6ce65]
2018-08-29 15:12:32,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fa6ce65]
2018-08-29 15:12:32,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:32,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:12:32,051 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:12:32,057 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:32,076 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423022da]
2018-08-29 15:12:35,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:12:35,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:35,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:35,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:35,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423022da]
2018-08-29 15:12:35,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423022da]
2018-08-29 15:12:35,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423022da]
2018-08-29 15:12:35,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423022da]
2018-08-29 15:12:35,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:35,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:12:35,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:12:35,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:35,031 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:35,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:40,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:40,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a1cf2]
2018-08-29 15:12:40,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:12:40,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:40,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a1cf2]
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":21}
2018-08-29 15:12:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:40,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a1cf2]
2018-08-29 15:12:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a1cf2]
2018-08-29 15:12:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0a1cf2]
2018-08-29 15:12:40,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:40,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:12:40,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:12:40,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,053 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:40,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:40,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54df9e5d]
2018-08-29 15:12:40,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:40,055 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:40,055 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54df9e5d]
2018-08-29 15:12:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54df9e5d]
2018-08-29 15:12:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54df9e5d]
2018-08-29 15:12:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54df9e5d]
2018-08-29 15:12:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:12:40,058 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:40,059 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:12:40,059 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:40,059 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:12:40,064 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:40,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,072 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,076 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:40,088 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:45,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:45,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eda8e95]
2018-08-29 15:12:45,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:45,023 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:45,023 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:45,024 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:45,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eda8e95]
2018-08-29 15:12:45,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eda8e95]
2018-08-29 15:12:45,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eda8e95]
2018-08-29 15:12:45,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eda8e95]
2018-08-29 15:12:45,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:45,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:12:45,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:12:45,033 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:12:45,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:45,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:45,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:48,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:48,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbf493b]
2018-08-29 15:12:48,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:48,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:48,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:48,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:48,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbf493b]
2018-08-29 15:12:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":22}
2018-08-29 15:12:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:48,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:48,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:48,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbf493b]
2018-08-29 15:12:48,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbf493b]
2018-08-29 15:12:48,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbf493b]
2018-08-29 15:12:48,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:48,051 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:12:48,051 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:12:48,057 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:12:48,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:48,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:50,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:50,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75cffcc4]
2018-08-29 15:12:50,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:50,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:50,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:50,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:50,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75cffcc4]
2018-08-29 15:12:50,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75cffcc4]
2018-08-29 15:12:50,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75cffcc4]
2018-08-29 15:12:50,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75cffcc4]
2018-08-29 15:12:50,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:50,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:12:50,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:12:50,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:50,030 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:12:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:50,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:12:55,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:55,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645c0242]
2018-08-29 15:12:55,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:55,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:12:55,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:12:55,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:12:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645c0242]
2018-08-29 15:12:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645c0242]
2018-08-29 15:12:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645c0242]
2018-08-29 15:12:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645c0242]
2018-08-29 15:12:55,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:55,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:12:55,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:12:55,029 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:12:55,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:55,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:55,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:12:56,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:12:56,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b384433]
2018-08-29 15:12:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:12:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:12:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:12:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:12:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b384433]
2018-08-29 15:12:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:12:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:12:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:12:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:12:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":23}
2018-08-29 15:12:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:12:56,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:12:56,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:12:56,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b384433]
2018-08-29 15:12:56,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b384433]
2018-08-29 15:12:56,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b384433]
2018-08-29 15:12:56,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:56,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:12:56,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:12:56,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:12:56,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:12:56,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a375a73]
2018-08-29 15:13:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:13:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a375a73]
2018-08-29 15:13:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:00,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":24}
2018-08-29 15:13:00,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:00,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:00,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,042 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:00,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00d9d4]
2018-08-29 15:13:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:00,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a375a73]
2018-08-29 15:13:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:00,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a375a73]
2018-08-29 15:13:00,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a375a73]
2018-08-29 15:13:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:00,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:13:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00d9d4]
2018-08-29 15:13:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00d9d4]
2018-08-29 15:13:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00d9d4]
2018-08-29 15:13:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f00d9d4]
2018-08-29 15:13:00,047 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:00,047 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:13:00,048 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:00,048 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:13:00,048 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:13:00,052 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:13:00,053 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:00,057 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:00,065 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:00,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,067 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:00,083 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:05,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:05,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7333d6f0]
2018-08-29 15:13:05,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:05,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:05,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:05,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:05,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7333d6f0]
2018-08-29 15:13:05,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7333d6f0]
2018-08-29 15:13:05,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7333d6f0]
2018-08-29 15:13:05,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7333d6f0]
2018-08-29 15:13:05,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:05,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:13:05,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:13:05,029 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:05,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:05,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:05,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:08,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:08,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52210c]
2018-08-29 15:13:08,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:08,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:08,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:08,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52210c]
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":25}
2018-08-29 15:13:08,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:08,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:08,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:08,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52210c]
2018-08-29 15:13:08,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52210c]
2018-08-29 15:13:08,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52210c]
2018-08-29 15:13:08,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:08,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:13:08,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:13:08,056 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:08,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:08,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c97e173]
2018-08-29 15:13:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:10,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:10,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c97e173]
2018-08-29 15:13:10,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c97e173]
2018-08-29 15:13:10,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c97e173]
2018-08-29 15:13:10,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c97e173]
2018-08-29 15:13:10,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:10,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:13:10,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:13:10,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:10,030 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:10,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:10,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,020 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:15,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:15,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7f80e5]
2018-08-29 15:13:15,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:15,023 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:15,023 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7f80e5]
2018-08-29 15:13:15,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7f80e5]
2018-08-29 15:13:15,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7f80e5]
2018-08-29 15:13:15,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7f80e5]
2018-08-29 15:13:15,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:15,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:13:15,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:13:15,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:15,035 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:15,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:15,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a0a34]
2018-08-29 15:13:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:16,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:16,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a0a34]
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":26}
2018-08-29 15:13:16,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:16,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:16,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:16,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a0a34]
2018-08-29 15:13:16,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a0a34]
2018-08-29 15:13:16,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a0a34]
2018-08-29 15:13:16,048 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:16,048 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:13:16,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:13:16,054 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:16,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:16,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@104c2092]
2018-08-29 15:13:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:20,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:20,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@104c2092]
2018-08-29 15:13:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@104c2092]
2018-08-29 15:13:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@104c2092]
2018-08-29 15:13:20,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@104c2092]
2018-08-29 15:13:20,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:20,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:13:20,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:13:20,030 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:20,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:20,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:24,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:24,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298af63c]
2018-08-29 15:13:24,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:24,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:24,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:24,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298af63c]
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":27}
2018-08-29 15:13:24,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:24,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:24,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:24,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298af63c]
2018-08-29 15:13:24,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298af63c]
2018-08-29 15:13:24,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298af63c]
2018-08-29 15:13:24,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:24,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:13:24,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:13:24,055 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:24,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:24,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b95cbb]
2018-08-29 15:13:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:25,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:25,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b95cbb]
2018-08-29 15:13:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b95cbb]
2018-08-29 15:13:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b95cbb]
2018-08-29 15:13:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b95cbb]
2018-08-29 15:13:25,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:25,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:13:25,025 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:13:25,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:25,031 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:25,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:25,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,019 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:30,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:30,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225f121]
2018-08-29 15:13:30,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:30,022 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:30,022 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:30,023 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:30,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225f121]
2018-08-29 15:13:30,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225f121]
2018-08-29 15:13:30,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225f121]
2018-08-29 15:13:30,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225f121]
2018-08-29 15:13:30,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:30,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:13:30,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:13:30,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:30,033 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:30,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:30,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40881188]
2018-08-29 15:13:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:32,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:32,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:32,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40881188]
2018-08-29 15:13:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":28}
2018-08-29 15:13:32,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:32,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:32,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:32,046 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40881188]
2018-08-29 15:13:32,046 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40881188]
2018-08-29 15:13:32,046 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40881188]
2018-08-29 15:13:32,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:32,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:13:32,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:13:32,056 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:32,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb98656]
2018-08-29 15:13:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:35,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:35,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:35,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb98656]
2018-08-29 15:13:35,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb98656]
2018-08-29 15:13:35,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb98656]
2018-08-29 15:13:35,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eb98656]
2018-08-29 15:13:35,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:35,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:13:35,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:13:35,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:35,030 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:35,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:40,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:40,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32454060]
2018-08-29 15:13:40,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:13:40,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:40,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:40,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32454060]
2018-08-29 15:13:40,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:40,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:40,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:40,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:40,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":29}
2018-08-29 15:13:40,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:40,043 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32454060]
2018-08-29 15:13:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32454060]
2018-08-29 15:13:40,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32454060]
2018-08-29 15:13:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3171873c]
2018-08-29 15:13:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:13:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3171873c]
2018-08-29 15:13:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3171873c]
2018-08-29 15:13:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3171873c]
2018-08-29 15:13:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3171873c]
2018-08-29 15:13:40,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:40,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:13:40,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:13:40,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:40,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:13:40,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:13:40,053 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:40,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:40,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:40,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:40,072 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:45,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:45,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cce0857]
2018-08-29 15:13:45,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:13:45,027 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:45,027 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:45,028 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:45,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cce0857]
2018-08-29 15:13:45,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cce0857]
2018-08-29 15:13:45,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cce0857]
2018-08-29 15:13:45,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cce0857]
2018-08-29 15:13:45,031 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:45,031 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:13:45,032 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:13:45,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:13:45,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:45,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:45,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:48,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:48,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42bfbd]
2018-08-29 15:13:48,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:13:48,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:48,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:48,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:48,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42bfbd]
2018-08-29 15:13:48,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:48,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":30}
2018-08-29 15:13:48,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:48,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:48,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:48,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42bfbd]
2018-08-29 15:13:48,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42bfbd]
2018-08-29 15:13:48,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42bfbd]
2018-08-29 15:13:48,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:48,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:13:48,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:13:48,055 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:13:48,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:48,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:50,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:50,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1080fb43]
2018-08-29 15:13:50,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:13:50,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:50,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:50,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:50,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1080fb43]
2018-08-29 15:13:50,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1080fb43]
2018-08-29 15:13:50,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1080fb43]
2018-08-29 15:13:50,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1080fb43]
2018-08-29 15:13:50,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:50,024 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:13:50,025 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:13:50,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:50,031 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:13:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:50,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:13:55,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:55,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ba1f6c]
2018-08-29 15:13:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:13:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:13:55,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:13:55,022 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:13:55,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ba1f6c]
2018-08-29 15:13:55,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ba1f6c]
2018-08-29 15:13:55,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ba1f6c]
2018-08-29 15:13:55,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ba1f6c]
2018-08-29 15:13:55,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:55,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:13:55,026 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:13:55,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:55,033 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:13:55,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:55,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:13:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:13:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f77b660]
2018-08-29 15:13:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:13:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:13:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:13:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f77b660]
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":31}
2018-08-29 15:13:56,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:13:56,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:13:56,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:13:56,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f77b660]
2018-08-29 15:13:56,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f77b660]
2018-08-29 15:13:56,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f77b660]
2018-08-29 15:13:56,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:56,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:13:56,052 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:13:56,058 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:13:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:13:56,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:00,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547f85bd]
2018-08-29 15:14:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:14:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:00,017 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:00,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547f85bd]
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":32}
2018-08-29 15:14:00,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,042 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:00,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547f85bd]
2018-08-29 15:14:00,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547f85bd]
2018-08-29 15:14:00,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547f85bd]
2018-08-29 15:14:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 15:14:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409364ab]
2018-08-29 15:14:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 15:14:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:00,046 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:00,046 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409364ab]
2018-08-29 15:14:00,046 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409364ab]
2018-08-29 15:14:00,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409364ab]
2018-08-29 15:14:00,047 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:14:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409364ab]
2018-08-29 15:14:00,047 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:14:00,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:00,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:14:00,051 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:14:00,052 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:00,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:00,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,056 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:00,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,069 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:00,070 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:00,070 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d8b530]
2018-08-29 15:14:00,071 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:00,071 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:00,071 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:00,072 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:00,072 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d8b530]
2018-08-29 15:14:00,072 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d8b530]
2018-08-29 15:14:00,072 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d8b530]
2018-08-29 15:14:00,072 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d8b530]
2018-08-29 15:14:00,074 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:00,075 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:14:00,075 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:14:00,080 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:00,081 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:00,082 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,082 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,083 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,087 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:00,099 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:05,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:05,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1658fc]
2018-08-29 15:14:05,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:05,023 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:05,023 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:05,025 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:05,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1658fc]
2018-08-29 15:14:05,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1658fc]
2018-08-29 15:14:05,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1658fc]
2018-08-29 15:14:05,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b1658fc]
2018-08-29 15:14:05,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:05,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:14:05,028 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:14:05,033 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:05,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:05,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:05,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d08a2f0]
2018-08-29 15:14:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:08,022 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d08a2f0]
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":33}
2018-08-29 15:14:08,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:08,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:08,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:08,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d08a2f0]
2018-08-29 15:14:08,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d08a2f0]
2018-08-29 15:14:08,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d08a2f0]
2018-08-29 15:14:08,053 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:08,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:14:08,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:14:08,060 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:08,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:08,080 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:10,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:10,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200f1a81]
2018-08-29 15:14:10,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:10,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:10,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:10,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:10,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200f1a81]
2018-08-29 15:14:10,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200f1a81]
2018-08-29 15:14:10,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200f1a81]
2018-08-29 15:14:10,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@200f1a81]
2018-08-29 15:14:10,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:10,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:14:10,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:14:10,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:10,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:10,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:10,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,019 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9cdefa]
2018-08-29 15:14:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:15,023 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:15,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9cdefa]
2018-08-29 15:14:15,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9cdefa]
2018-08-29 15:14:15,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9cdefa]
2018-08-29 15:14:15,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9cdefa]
2018-08-29 15:14:15,026 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:15,026 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:14:15,027 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:14:15,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:15,034 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:15,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:15,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:16,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:16,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659ecc30]
2018-08-29 15:14:16,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:16,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:16,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659ecc30]
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":34}
2018-08-29 15:14:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:16,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:16,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:16,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659ecc30]
2018-08-29 15:14:16,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659ecc30]
2018-08-29 15:14:16,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@659ecc30]
2018-08-29 15:14:16,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:16,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:14:16,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:14:16,057 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:16,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:16,078 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,019 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:20,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:20,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4067545d]
2018-08-29 15:14:20,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:20,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:20,022 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4067545d]
2018-08-29 15:14:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4067545d]
2018-08-29 15:14:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4067545d]
2018-08-29 15:14:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4067545d]
2018-08-29 15:14:20,026 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:20,026 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:14:20,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:14:20,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:20,033 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:20,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:20,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be48055]
2018-08-29 15:14:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:24,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:24,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be48055]
2018-08-29 15:14:24,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:24,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:24,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:24,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:24,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":35}
2018-08-29 15:14:24,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:24,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:24,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:24,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be48055]
2018-08-29 15:14:24,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be48055]
2018-08-29 15:14:24,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be48055]
2018-08-29 15:14:24,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:24,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:14:24,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:14:24,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:24,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:24,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:25,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:25,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde81b6]
2018-08-29 15:14:25,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:25,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:25,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:25,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:25,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde81b6]
2018-08-29 15:14:25,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde81b6]
2018-08-29 15:14:25,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde81b6]
2018-08-29 15:14:25,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde81b6]
2018-08-29 15:14:25,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:25,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:14:25,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:14:25,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:25,030 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:25,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:25,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507fa126]
2018-08-29 15:14:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507fa126]
2018-08-29 15:14:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507fa126]
2018-08-29 15:14:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507fa126]
2018-08-29 15:14:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507fa126]
2018-08-29 15:14:30,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:30,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:14:30,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:14:30,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:30,030 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:30,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:32,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:32,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc192dd]
2018-08-29 15:14:32,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:32,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:32,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc192dd]
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":36}
2018-08-29 15:14:32,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:32,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:32,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:32,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc192dd]
2018-08-29 15:14:32,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc192dd]
2018-08-29 15:14:32,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc192dd]
2018-08-29 15:14:32,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:32,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:14:32,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:14:32,055 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:32,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:32,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:35,015 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:35,015 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cc382b]
2018-08-29 15:14:35,015 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:35,015 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:35,015 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:35,016 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:35,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cc382b]
2018-08-29 15:14:35,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cc382b]
2018-08-29 15:14:35,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cc382b]
2018-08-29 15:14:35,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cc382b]
2018-08-29 15:14:35,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:35,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:14:35,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:14:35,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:35,025 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:35,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:35,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,014 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:40,015 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:40,015 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45feba]
2018-08-29 15:14:40,015 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:40,015 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:40,015 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:40,016 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45feba]
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":37}
2018-08-29 15:14:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:40,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:40,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,037 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:40,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:40,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a79533]
2018-08-29 15:14:40,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:14:40,038 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:40,038 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:40,039 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:40,039 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a79533]
2018-08-29 15:14:40,039 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:40,040 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a79533]
2018-08-29 15:14:40,040 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a79533]
2018-08-29 15:14:40,040 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78a79533]
2018-08-29 15:14:40,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:14:40,040 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45feba]
2018-08-29 15:14:40,040 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45feba]
2018-08-29 15:14:40,040 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d45feba]
2018-08-29 15:14:40,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:40,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:14:40,042 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:14:40,042 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:40,042 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:14:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:14:40,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:40,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:40,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:40,076 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171db0a9]
2018-08-29 15:14:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171db0a9]
2018-08-29 15:14:45,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171db0a9]
2018-08-29 15:14:45,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171db0a9]
2018-08-29 15:14:45,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@171db0a9]
2018-08-29 15:14:45,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:45,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:14:45,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:14:45,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:45,034 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:14:45,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:45,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:48,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:48,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1731719c]
2018-08-29 15:14:48,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:48,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:48,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1731719c]
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":38}
2018-08-29 15:14:48,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:48,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:48,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:48,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1731719c]
2018-08-29 15:14:48,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1731719c]
2018-08-29 15:14:48,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1731719c]
2018-08-29 15:14:48,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:48,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:14:48,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:14:48,054 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:14:48,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:48,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,015 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:50,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:50,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538d4fff]
2018-08-29 15:14:50,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:50,017 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:50,017 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538d4fff]
2018-08-29 15:14:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538d4fff]
2018-08-29 15:14:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538d4fff]
2018-08-29 15:14:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@538d4fff]
2018-08-29 15:14:50,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:50,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:14:50,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:14:50,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:50,027 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:14:50,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:50,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:14:55,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:55,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d621b5b]
2018-08-29 15:14:55,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:55,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:14:55,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:14:55,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:14:55,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d621b5b]
2018-08-29 15:14:55,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d621b5b]
2018-08-29 15:14:55,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d621b5b]
2018-08-29 15:14:55,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d621b5b]
2018-08-29 15:14:55,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:55,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:14:55,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:14:55,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:55,029 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:14:55,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:55,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:14:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:14:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47db8659]
2018-08-29 15:14:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:14:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:14:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:14:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47db8659]
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":39}
2018-08-29 15:14:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:14:56,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:14:56,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:14:56,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47db8659]
2018-08-29 15:14:56,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47db8659]
2018-08-29 15:14:56,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47db8659]
2018-08-29 15:14:56,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:56,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:14:56,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:14:56,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:14:56,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:14:56,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d90e263]
2018-08-29 15:15:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:00,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:00,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d90e263]
2018-08-29 15:15:00,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:00,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:00,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:00,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:00,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":40}
2018-08-29 15:15:00,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:00,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d90e263]
2018-08-29 15:15:00,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d90e263]
2018-08-29 15:15:00,045 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d90e263]
2018-08-29 15:15:00,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:00,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e935388]
2018-08-29 15:15:00,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:00,046 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:00,046 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:00,047 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:00,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e935388]
2018-08-29 15:15:00,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e935388]
2018-08-29 15:15:00,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e935388]
2018-08-29 15:15:00,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e935388]
2018-08-29 15:15:00,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:15:00,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:00,049 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:15:00,050 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:15:00,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:00,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:15:00,054 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:15:00,055 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:00,059 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:00,067 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:00,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,069 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:00,085 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:05,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:05,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a743e97]
2018-08-29 15:15:05,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:05,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:05,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:05,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:05,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a743e97]
2018-08-29 15:15:05,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a743e97]
2018-08-29 15:15:05,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a743e97]
2018-08-29 15:15:05,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a743e97]
2018-08-29 15:15:05,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:05,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:15:05,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:15:05,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:05,029 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:05,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:05,043 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:08,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:08,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b32b65e]
2018-08-29 15:15:08,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:08,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:08,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:08,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:08,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b32b65e]
2018-08-29 15:15:08,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:08,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:08,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:08,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:08,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":41}
2018-08-29 15:15:08,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:08,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:08,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:08,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b32b65e]
2018-08-29 15:15:08,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b32b65e]
2018-08-29 15:15:08,045 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b32b65e]
2018-08-29 15:15:08,048 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:08,049 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:15:08,049 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:15:08,054 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:08,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:08,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:10,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@639027c9]
2018-08-29 15:15:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:10,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@639027c9]
2018-08-29 15:15:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@639027c9]
2018-08-29 15:15:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@639027c9]
2018-08-29 15:15:10,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@639027c9]
2018-08-29 15:15:10,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:10,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:15:10,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:15:10,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:10,030 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:10,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:10,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49a847b5]
2018-08-29 15:15:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:15,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49a847b5]
2018-08-29 15:15:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49a847b5]
2018-08-29 15:15:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49a847b5]
2018-08-29 15:15:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49a847b5]
2018-08-29 15:15:15,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:15,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:15:15,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:15:15,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:15,032 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:15,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:15,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:16,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:16,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5081eeb0]
2018-08-29 15:15:16,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:16,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:16,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:16,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5081eeb0]
2018-08-29 15:15:16,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:16,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:16,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:16,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:16,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":42}
2018-08-29 15:15:16,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:16,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:16,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:16,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5081eeb0]
2018-08-29 15:15:16,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5081eeb0]
2018-08-29 15:15:16,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5081eeb0]
2018-08-29 15:15:16,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:16,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:15:16,052 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:15:16,057 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:16,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:16,076 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:20,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:20,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f52a48]
2018-08-29 15:15:20,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:15:20,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:20,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:20,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:20,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f52a48]
2018-08-29 15:15:20,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f52a48]
2018-08-29 15:15:20,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f52a48]
2018-08-29 15:15:20,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f52a48]
2018-08-29 15:15:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:20,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:15:20,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:15:20,030 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:20,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:24,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:24,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4015f950]
2018-08-29 15:15:24,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:24,014 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:24,014 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4015f950]
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:24,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":43}
2018-08-29 15:15:24,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:24,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:24,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:24,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4015f950]
2018-08-29 15:15:24,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4015f950]
2018-08-29 15:15:24,038 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4015f950]
2018-08-29 15:15:24,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:24,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:15:24,041 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:15:24,046 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:24,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,052 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:24,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:25,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:25,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3d22b4]
2018-08-29 15:15:25,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:25,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:25,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3d22b4]
2018-08-29 15:15:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3d22b4]
2018-08-29 15:15:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3d22b4]
2018-08-29 15:15:25,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a3d22b4]
2018-08-29 15:15:25,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:25,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:15:25,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:15:25,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:25,027 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:25,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:25,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e625e1]
2018-08-29 15:15:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:30,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e625e1]
2018-08-29 15:15:30,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e625e1]
2018-08-29 15:15:30,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e625e1]
2018-08-29 15:15:30,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e625e1]
2018-08-29 15:15:30,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:30,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:15:30,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:15:30,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:30,031 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:30,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:32,019 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528933c]
2018-08-29 15:15:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:32,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:32,021 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:32,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528933c]
2018-08-29 15:15:32,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:32,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:32,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:32,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:32,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":44}
2018-08-29 15:15:32,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:32,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:32,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:32,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528933c]
2018-08-29 15:15:32,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528933c]
2018-08-29 15:15:32,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528933c]
2018-08-29 15:15:32,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:32,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:15:32,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:15:32,059 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:32,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,065 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:32,078 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:35,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:35,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcded2]
2018-08-29 15:15:35,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:35,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:35,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:35,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:35,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcded2]
2018-08-29 15:15:35,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcded2]
2018-08-29 15:15:35,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcded2]
2018-08-29 15:15:35,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcded2]
2018-08-29 15:15:35,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:35,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:15:35,024 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:15:35,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:35,030 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:35,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:40,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:40,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457aa4e1]
2018-08-29 15:15:40,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:40,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:40,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:40,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:40,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457aa4e1]
2018-08-29 15:15:40,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:40,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:40,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:40,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:40,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":45}
2018-08-29 15:15:40,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,043 [schedulerFactoryBean_Worker-2] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:40,043 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457aa4e1]
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d022]
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457aa4e1]
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457aa4e1]
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d022]
2018-08-29 15:15:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d022]
2018-08-29 15:15:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d022]
2018-08-29 15:15:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d022]
2018-08-29 15:15:40,047 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:40,047 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:15:40,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:40,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:15:40,048 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:15:40,052 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:15:40,053 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:40,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:40,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,057 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:40,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:45,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f032857]
2018-08-29 15:15:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:15:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f032857]
2018-08-29 15:15:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f032857]
2018-08-29 15:15:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f032857]
2018-08-29 15:15:45,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f032857]
2018-08-29 15:15:45,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:45,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:15:45,025 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:15:45,031 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:15:45,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:45,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,045 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:45,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:48,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:48,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df1424f]
2018-08-29 15:15:48,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:48,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:48,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df1424f]
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":46}
2018-08-29 15:15:48,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:48,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:48,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:48,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df1424f]
2018-08-29 15:15:48,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df1424f]
2018-08-29 15:15:48,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df1424f]
2018-08-29 15:15:48,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:48,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:15:48,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:15:48,054 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:15:48,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:48,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:50,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68ea32b5]
2018-08-29 15:15:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:50,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:50,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:50,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68ea32b5]
2018-08-29 15:15:50,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68ea32b5]
2018-08-29 15:15:50,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68ea32b5]
2018-08-29 15:15:50,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68ea32b5]
2018-08-29 15:15:50,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:50,022 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:15:50,023 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:15:50,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:50,030 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:15:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:50,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,018 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:15:55,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:55,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201cac19]
2018-08-29 15:15:55,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:55,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:15:55,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:15:55,022 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:15:55,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201cac19]
2018-08-29 15:15:55,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201cac19]
2018-08-29 15:15:55,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201cac19]
2018-08-29 15:15:55,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201cac19]
2018-08-29 15:15:55,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:55,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:15:55,026 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:15:55,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:55,032 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:15:55,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:55,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:15:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:15:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82c07c]
2018-08-29 15:15:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:15:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:15:56,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:15:56,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82c07c]
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":47}
2018-08-29 15:15:56,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:15:56,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:15:56,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:15:56,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82c07c]
2018-08-29 15:15:56,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82c07c]
2018-08-29 15:15:56,047 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82c07c]
2018-08-29 15:15:56,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:56,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:15:56,052 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:15:56,058 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:15:56,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,059 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:15:56,077 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342f82ce]
2018-08-29 15:16:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:00,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:00,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342f82ce]
2018-08-29 15:16:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":48}
2018-08-29 15:16:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:00,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:00,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 15:16:00,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:00,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee42eab]
2018-08-29 15:16:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:00,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:16:00,043 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 15:16:00,043 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342f82ce]
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342f82ce]
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342f82ce]
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee42eab]
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee42eab]
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee42eab]
2018-08-29 15:16:00,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee42eab]
2018-08-29 15:16:00,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:00,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:16:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:16:00,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:16:00,052 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:16:00,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:00,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,054 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:00,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,057 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:00,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,070 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:00,070 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:00,071 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520e6fd5]
2018-08-29 15:16:00,071 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:00,071 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:00,071 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:00,072 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:00,072 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520e6fd5]
2018-08-29 15:16:00,072 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520e6fd5]
2018-08-29 15:16:00,072 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520e6fd5]
2018-08-29 15:16:00,072 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@520e6fd5]
2018-08-29 15:16:00,074 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:00,074 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:16:00,075 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:16:00,081 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:00,082 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:00,083 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,083 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,083 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,088 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:00,100 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:05,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:05,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ab25af]
2018-08-29 15:16:05,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:05,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:05,021 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:05,022 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:05,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ab25af]
2018-08-29 15:16:05,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ab25af]
2018-08-29 15:16:05,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ab25af]
2018-08-29 15:16:05,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ab25af]
2018-08-29 15:16:05,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:05,024 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:16:05,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:16:05,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:05,032 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:05,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,037 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:05,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:08,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:08,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1f59af]
2018-08-29 15:16:08,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:08,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:08,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1f59af]
2018-08-29 15:16:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":49}
2018-08-29 15:16:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:08,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:08,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:08,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1f59af]
2018-08-29 15:16:08,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1f59af]
2018-08-29 15:16:08,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b1f59af]
2018-08-29 15:16:08,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:08,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:16:08,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:16:08,061 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:08,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:08,078 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:10,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:10,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1002dbb8]
2018-08-29 15:16:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:10,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1002dbb8]
2018-08-29 15:16:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1002dbb8]
2018-08-29 15:16:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1002dbb8]
2018-08-29 15:16:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1002dbb8]
2018-08-29 15:16:10,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:10,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:16:10,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:16:10,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:10,027 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:10,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:10,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,014 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:15,015 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:15,015 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d440859]
2018-08-29 15:16:15,015 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:15,015 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:15,015 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:15,016 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:15,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d440859]
2018-08-29 15:16:15,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d440859]
2018-08-29 15:16:15,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d440859]
2018-08-29 15:16:15,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d440859]
2018-08-29 15:16:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:16:15,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:16:15,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:15,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:15,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:15,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:16,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,012 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:16,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:16,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77927b99]
2018-08-29 15:16:16,013 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:16:16,013 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77927b99]
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":50}
2018-08-29 15:16:16,014 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:16,021 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:16,038 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:16,039 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77927b99]
2018-08-29 15:16:16,039 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77927b99]
2018-08-29 15:16:16,039 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77927b99]
2018-08-29 15:16:16,042 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:16,042 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:16:16,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:16:16,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:16,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:16,067 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:20,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:20,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b372dc]
2018-08-29 15:16:20,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:16:20,017 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:20,017 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:20,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:20,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b372dc]
2018-08-29 15:16:20,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b372dc]
2018-08-29 15:16:20,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b372dc]
2018-08-29 15:16:20,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b372dc]
2018-08-29 15:16:20,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:20,021 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:16:20,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:16:20,027 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:20,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:20,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:20,047 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad11492]
2018-08-29 15:16:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:16:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:24,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad11492]
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":51}
2018-08-29 15:16:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:24,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:24,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:24,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad11492]
2018-08-29 15:16:24,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad11492]
2018-08-29 15:16:24,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad11492]
2018-08-29 15:16:24,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:24,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:16:24,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:16:24,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:24,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:24,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44857537]
2018-08-29 15:16:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:16:25,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:25,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44857537]
2018-08-29 15:16:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44857537]
2018-08-29 15:16:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44857537]
2018-08-29 15:16:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44857537]
2018-08-29 15:16:25,022 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:25,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:16:25,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:16:25,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:25,030 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:25,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:25,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358c2644]
2018-08-29 15:16:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:16:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:30,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358c2644]
2018-08-29 15:16:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358c2644]
2018-08-29 15:16:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358c2644]
2018-08-29 15:16:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358c2644]
2018-08-29 15:16:30,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:30,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:16:30,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:16:30,029 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:30,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:30,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:32,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:32,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592f7c4b]
2018-08-29 15:16:32,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:32,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:32,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592f7c4b]
2018-08-29 15:16:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":52}
2018-08-29 15:16:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:32,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:32,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:32,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592f7c4b]
2018-08-29 15:16:32,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592f7c4b]
2018-08-29 15:16:32,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@592f7c4b]
2018-08-29 15:16:32,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:32,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:16:32,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:16:32,056 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:32,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:32,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a506f8f]
2018-08-29 15:16:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a506f8f]
2018-08-29 15:16:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a506f8f]
2018-08-29 15:16:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a506f8f]
2018-08-29 15:16:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a506f8f]
2018-08-29 15:16:35,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:35,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:16:35,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:16:35,029 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:35,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:35,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:35,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:40,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:40,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f4858d]
2018-08-29 15:16:40,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:16:40,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:40,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f4858d]
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":53}
2018-08-29 15:16:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f4858d]
2018-08-29 15:16:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f4858d]
2018-08-29 15:16:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f4858d]
2018-08-29 15:16:40,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:40,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:16:40,052 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:16:40,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,055 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:40,056 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:40,056 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b8fd5f]
2018-08-29 15:16:40,056 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:16:40,056 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:40,056 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:40,057 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:40,057 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b8fd5f]
2018-08-29 15:16:40,057 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b8fd5f]
2018-08-29 15:16:40,057 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b8fd5f]
2018-08-29 15:16:40,057 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b8fd5f]
2018-08-29 15:16:40,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:16:40,059 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:40,059 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:16:40,060 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:16:40,061 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:40,064 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,071 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,075 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:40,087 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:45,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:45,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ae8fb]
2018-08-29 15:16:45,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:16:45,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:45,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ae8fb]
2018-08-29 15:16:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ae8fb]
2018-08-29 15:16:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ae8fb]
2018-08-29 15:16:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ae8fb]
2018-08-29 15:16:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:45,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:16:45,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:16:45,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:45,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:16:45,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:45,046 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:48,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:48,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f0a419]
2018-08-29 15:16:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:16:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f0a419]
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":54}
2018-08-29 15:16:48,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:48,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:48,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:48,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f0a419]
2018-08-29 15:16:48,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f0a419]
2018-08-29 15:16:48,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f0a419]
2018-08-29 15:16:48,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:48,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:16:48,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:16:48,053 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:16:48,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:48,070 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:50,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:50,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59dab14c]
2018-08-29 15:16:50,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:16:50,014 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:50,014 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:50,015 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:50,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59dab14c]
2018-08-29 15:16:50,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59dab14c]
2018-08-29 15:16:50,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59dab14c]
2018-08-29 15:16:50,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59dab14c]
2018-08-29 15:16:50,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:50,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:16:50,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:16:50,022 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:50,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:16:50,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,024 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:50,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:16:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@250aea7e]
2018-08-29 15:16:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:16:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:16:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:16:55,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:16:55,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@250aea7e]
2018-08-29 15:16:55,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@250aea7e]
2018-08-29 15:16:55,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@250aea7e]
2018-08-29 15:16:55,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@250aea7e]
2018-08-29 15:16:55,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:55,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:16:55,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:16:55,029 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:16:55,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:55,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,039 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:55,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:16:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:16:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a7f53a]
2018-08-29 15:16:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:16:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:16:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:16:56,017 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:16:56,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a7f53a]
2018-08-29 15:16:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:16:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:16:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:16:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:16:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":55}
2018-08-29 15:16:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:16:56,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:16:56,041 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:16:56,041 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a7f53a]
2018-08-29 15:16:56,041 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a7f53a]
2018-08-29 15:16:56,041 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a7f53a]
2018-08-29 15:16:56,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:56,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:16:56,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:16:56,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:16:56,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:16:56,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634c7aa3]
2018-08-29 15:17:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:17:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:00,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634c7aa3]
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":56}
2018-08-29 15:17:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:00,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,042 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,042 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634c7aa3]
2018-08-29 15:17:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634c7aa3]
2018-08-29 15:17:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634c7aa3]
2018-08-29 15:17:00,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbf13d8]
2018-08-29 15:17:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:00,045 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:00,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbf13d8]
2018-08-29 15:17:00,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbf13d8]
2018-08-29 15:17:00,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbf13d8]
2018-08-29 15:17:00,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbf13d8]
2018-08-29 15:17:00,046 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 0 triggers
2018-08-29 15:17:00,046 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:17:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:17:00,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:00,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:17:00,051 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:17:00,052 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:00,056 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:00,063 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:00,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,064 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,065 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,069 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:00,081 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:05,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:05,014 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d4c4b3a]
2018-08-29 15:17:05,015 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:05,015 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:05,015 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:05,015 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:05,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d4c4b3a]
2018-08-29 15:17:05,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d4c4b3a]
2018-08-29 15:17:05,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d4c4b3a]
2018-08-29 15:17:05,016 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d4c4b3a]
2018-08-29 15:17:05,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:05,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:17:05,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:17:05,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:05,025 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:05,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:05,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:08,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:08,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af6e8f]
2018-08-29 15:17:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:08,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af6e8f]
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:08,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":57}
2018-08-29 15:17:08,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:08,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:08,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:08,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af6e8f]
2018-08-29 15:17:08,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af6e8f]
2018-08-29 15:17:08,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6af6e8f]
2018-08-29 15:17:08,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:08,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:17:08,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:17:08,055 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:08,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:08,073 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:10,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:10,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38178c21]
2018-08-29 15:17:10,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:10,017 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:10,017 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38178c21]
2018-08-29 15:17:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38178c21]
2018-08-29 15:17:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38178c21]
2018-08-29 15:17:10,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38178c21]
2018-08-29 15:17:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:10,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:17:10,021 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:17:10,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:10,026 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:10,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:10,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:15,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@97cb0df]
2018-08-29 15:17:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:15,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:15,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:15,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@97cb0df]
2018-08-29 15:17:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@97cb0df]
2018-08-29 15:17:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@97cb0df]
2018-08-29 15:17:15,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@97cb0df]
2018-08-29 15:17:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:15,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:17:15,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:17:15,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:15,029 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:15,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,035 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:15,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:16,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:16,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@758424b0]
2018-08-29 15:17:16,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:16,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:16,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:16,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:16,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@758424b0]
2018-08-29 15:17:16,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:16,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:16,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:16,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:16,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":58}
2018-08-29 15:17:16,020 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:16,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:16,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:16,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@758424b0]
2018-08-29 15:17:16,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@758424b0]
2018-08-29 15:17:16,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@758424b0]
2018-08-29 15:17:16,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:16,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:17:16,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:17:16,056 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:16,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:16,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:20,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:20,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:20,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc5fbdb]
2018-08-29 15:17:20,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:20,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:20,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:20,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:20,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc5fbdb]
2018-08-29 15:17:20,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc5fbdb]
2018-08-29 15:17:20,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc5fbdb]
2018-08-29 15:17:20,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dc5fbdb]
2018-08-29 15:17:20,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:20,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:17:20,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:17:20,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:20,029 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:20,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:20,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:24,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:24,017 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df5933]
2018-08-29 15:17:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:24,018 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:24,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:24,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df5933]
2018-08-29 15:17:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":59}
2018-08-29 15:17:24,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:24,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:24,043 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:24,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df5933]
2018-08-29 15:17:24,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df5933]
2018-08-29 15:17:24,044 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df5933]
2018-08-29 15:17:24,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:24,048 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:17:24,049 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:17:24,054 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:24,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,060 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:24,072 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:25,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eb0352]
2018-08-29 15:17:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:25,018 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:25,019 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eb0352]
2018-08-29 15:17:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eb0352]
2018-08-29 15:17:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eb0352]
2018-08-29 15:17:25,020 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eb0352]
2018-08-29 15:17:25,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:25,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:17:25,023 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:17:25,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:25,029 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:25,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:25,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:30,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42809ba3]
2018-08-29 15:17:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:30,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42809ba3]
2018-08-29 15:17:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42809ba3]
2018-08-29 15:17:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42809ba3]
2018-08-29 15:17:30,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42809ba3]
2018-08-29 15:17:30,022 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:30,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:17:30,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:17:30,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:30,029 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:30,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:32,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,003 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:32,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:32,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab14830]
2018-08-29 15:17:32,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:32,019 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:32,020 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab14830]
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":60}
2018-08-29 15:17:32,021 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:32,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:32,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:32,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab14830]
2018-08-29 15:17:32,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab14830]
2018-08-29 15:17:32,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab14830]
2018-08-29 15:17:32,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:32,049 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:17:32,050 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:17:32,055 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:32,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,056 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,061 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:32,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:35,017 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21bf7062]
2018-08-29 15:17:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:35,018 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:35,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:35,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21bf7062]
2018-08-29 15:17:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21bf7062]
2018-08-29 15:17:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21bf7062]
2018-08-29 15:17:35,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21bf7062]
2018-08-29 15:17:35,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:35,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:17:35,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:17:35,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:35,029 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:35,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:35,049 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:40,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:40,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba8e1c5]
2018-08-29 15:17:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:40,020 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:40,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:40,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba8e1c5]
2018-08-29 15:17:40,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:40,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:40,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:40,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:40,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":61}
2018-08-29 15:17:40,022 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:40,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:40,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,044 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,045 [schedulerFactoryBean_Worker-3] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:40,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba8e1c5]
2018-08-29 15:17:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba8e1c5]
2018-08-29 15:17:40,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:40,046 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba8e1c5]
2018-08-29 15:17:40,046 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b04e40]
2018-08-29 15:17:40,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:17:40,047 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:40,047 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:40,048 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:40,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b04e40]
2018-08-29 15:17:40,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b04e40]
2018-08-29 15:17:40,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b04e40]
2018-08-29 15:17:40,049 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38b04e40]
2018-08-29 15:17:40,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:40,050 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:17:40,051 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:17:40,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:40,051 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:17:40,055 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:17:40,056 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,057 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,060 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:40,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:40,074 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:45,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:45,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e332776]
2018-08-29 15:17:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@30307b99] will be managed by Spring
2018-08-29 15:17:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:45,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e332776]
2018-08-29 15:17:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e332776]
2018-08-29 15:17:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e332776]
2018-08-29 15:17:45,020 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e332776]
2018-08-29 15:17:45,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:45,023 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:17:45,024 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:17:45,030 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:17:45,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:45,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:45,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,016 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:48,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:48,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e2696d0]
2018-08-29 15:17:48,017 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:48,017 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:48,017 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:48,018 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:48,018 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e2696d0]
2018-08-29 15:17:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":62}
2018-08-29 15:17:48,019 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:48,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:48,042 [schedulerFactoryBean_Worker-5] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:48,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e2696d0]
2018-08-29 15:17:48,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e2696d0]
2018-08-29 15:17:48,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e2696d0]
2018-08-29 15:17:48,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:48,046 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:17:48,047 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:17:48,052 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:17:48,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,058 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:48,069 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,017 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,018 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:50,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:50,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227967fa]
2018-08-29 15:17:50,019 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:50,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:50,019 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:50,020 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:50,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227967fa]
2018-08-29 15:17:50,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227967fa]
2018-08-29 15:17:50,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227967fa]
2018-08-29 15:17:50,020 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227967fa]
2018-08-29 15:17:50,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:50,022 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:17:50,023 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:17:50,028 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:17:50,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,031 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,036 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:50,048 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,014 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:17:55,014 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:55,014 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff8f88]
2018-08-29 15:17:55,015 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:55,015 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:17:55,015 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:17:55,016 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:17:55,016 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff8f88]
2018-08-29 15:17:55,016 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff8f88]
2018-08-29 15:17:55,016 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff8f88]
2018-08-29 15:17:55,016 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff8f88]
2018-08-29 15:17:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:17:55,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:17:55,023 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:55,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:17:55,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:55,040 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:56,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,015 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:17:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:17:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7851d109]
2018-08-29 15:17:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:17:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:17:56,016 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:17:56,017 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7851d109]
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":63}
2018-08-29 15:17:56,018 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:17:56,026 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:17:56,042 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:17:56,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7851d109]
2018-08-29 15:17:56,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7851d109]
2018-08-29 15:17:56,043 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7851d109]
2018-08-29 15:17:56,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:56,047 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:17:56,048 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:17:56,053 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:17:56,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,062 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:17:56,079 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,015 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:18:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:18:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcf02d3]
2018-08-29 15:18:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@7dd73d22] will be managed by Spring
2018-08-29 15:18:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:18:00,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcf02d3]
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":64}
2018-08-29 15:18:00,019 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:18:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,028 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,041 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,042 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.btcAccountJob
2018-08-29 15:18:00,043 [schedulerFactoryBean_Worker-1] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:18:00,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:18:00,043 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4782e203]
2018-08-29 15:18:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcf02d3]
2018-08-29 15:18:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcf02d3]
2018-08-29 15:18:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:18:00,044 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcf02d3]
2018-08-29 15:18:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_btc.scancursor where current_block = (select min(current_block) from coin_btc.scancursor where sync_status = 0) 
2018-08-29 15:18:00,044 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:18:00,045 [schedulerFactoryBean_Worker-5] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:18:00,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4782e203]
2018-08-29 15:18:00,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4782e203]
2018-08-29 15:18:00,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4782e203]
2018-08-29 15:18:00,045 [schedulerFactoryBean_Worker-5] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4782e203]
2018-08-29 15:18:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:18:00,047 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:18:00,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-5
2018-08-29 15:18:00,048 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-5
2018-08-29 15:18:00,048 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:18:00,051 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-5
2018-08-29 15:18:00,053 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:18:00,053 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:00,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,054 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,056 [schedulerFactoryBean_Worker-5] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-5
2018-08-29 15:18:00,068 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,069 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:18:00,070 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:18:00,070 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fe4ee43]
2018-08-29 15:18:00,070 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:18:00,070 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:18:00,071 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:18:00,072 [schedulerFactoryBean_Worker-2] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:18:00,072 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fe4ee43]
2018-08-29 15:18:00,072 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fe4ee43]
2018-08-29 15:18:00,072 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fe4ee43]
2018-08-29 15:18:00,072 [schedulerFactoryBean_Worker-2] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fe4ee43]
2018-08-29 15:18:00,074 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-2
2018-08-29 15:18:00,074 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-2
2018-08-29 15:18:00,075 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-2
2018-08-29 15:18:00,080 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:00,081 [schedulerFactoryBean_Worker-2] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-2
2018-08-29 15:18:00,082 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,082 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,083 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,087 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:00,099 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,016 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,018 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:18:05,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:18:05,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f43eb3]
2018-08-29 15:18:05,019 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:18:05,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:18:05,019 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:18:05,021 [schedulerFactoryBean_Worker-3] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:18:05,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f43eb3]
2018-08-29 15:18:05,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f43eb3]
2018-08-29 15:18:05,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f43eb3]
2018-08-29 15:18:05,021 [schedulerFactoryBean_Worker-3] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f43eb3]
2018-08-29 15:18:05,023 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-3
2018-08-29 15:18:05,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-3
2018-08-29 15:18:05,024 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-3
2018-08-29 15:18:05,030 [schedulerFactoryBean_Worker-3] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-3
2018-08-29 15:18:05,032 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:05,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,033 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,038 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:05,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:08,000 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,013 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,014 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethJob
2018-08-29 15:18:08,015 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:18:08,015 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb021ca]
2018-08-29 15:18:08,015 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:18:08,015 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==>  Preparing: SELECT IFNULL(MAX(block_number),0 ) FROM coin_eth.block 
2018-08-29 15:18:08,015 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - ==> Parameters: 
2018-08-29 15:18:08,016 [schedulerFactoryBean_Worker-4] [DEBUG] com.ora.blockchain.mybatis.mapper.block.EthereumBlockMapper.queryMaxBlockInDb - <==      Total: 1
2018-08-29 15:18:08,016 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb021ca]
2018-08-29 15:18:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> POST http://52.83.130.131:8545/ http/1.1
2018-08-29 15:18:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Type: application/json; charset=utf-8
2018-08-29 15:18:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - Content-Length: 64
2018-08-29 15:18:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - 
2018-08-29 15:18:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - {"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":65}
2018-08-29 15:18:08,017 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - --> END POST (64-byte body)
2018-08-29 15:18:08,025 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:08,039 [schedulerFactoryBean_Worker-4] [DEBUG] org.web3j.protocol.http.HttpService - <-- HTTP FAILED: java.net.ConnectException: Failed to connect to /52.83.130.131:8545
2018-08-29 15:18:08,040 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb021ca]
2018-08-29 15:18:08,041 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb021ca]
2018-08-29 15:18:08,041 [schedulerFactoryBean_Worker-4] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cb021ca]
2018-08-29 15:18:08,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-4
2018-08-29 15:18:08,044 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-4
2018-08-29 15:18:08,045 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-4
2018-08-29 15:18:08,050 [schedulerFactoryBean_Worker-4] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-4
2018-08-29 15:18:08,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,050 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,051 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,055 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:08,066 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,001 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,002 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,014 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,015 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.core.JobRunShell - Calling execute on job DEFAULT_GROUP.ethAccountJob
2018-08-29 15:18:10,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
2018-08-29 15:18:10,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6107be8c]
2018-08-29 15:18:10,016 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [com.mysql.jdbc.JDBC4Connection@705809c3] will be managed by Spring
2018-08-29 15:18:10,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==>  Preparing: SELECT `id`, `current_block`, `sync_status` FROM coin_eth.scancursor where current_block = (select min(current_block) from coin_eth.scancursor where sync_status = 0) 
2018-08-29 15:18:10,017 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - ==> Parameters: 
2018-08-29 15:18:10,018 [schedulerFactoryBean_Worker-1] [DEBUG] com.ora.blockchain.mybatis.mapper.common.ScanCursorMapper.getNotConfirmScanCursor - <==      Total: 0
2018-08-29 15:18:10,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6107be8c]
2018-08-29 15:18:10,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6107be8c]
2018-08-29 15:18:10,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6107be8c]
2018-08-29 15:18:10,018 [schedulerFactoryBean_Worker-1] [DEBUG] org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6107be8c]
2018-08-29 15:18:10,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_Worker-1
2018-08-29 15:18:10,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_Worker-1
2018-08-29 15:18:10,021 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_Worker-1
2018-08-29 15:18:10,027 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:10,028 [schedulerFactoryBean_Worker-1] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_Worker-1
2018-08-29 15:18:10,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,029 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,030 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,034 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:10,046 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.core.QuartzSchedulerThread - batch acquisition of 1 triggers
2018-08-29 15:18:11,388 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is desired by: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:11,388 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' is being obtained: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:11,389 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' given to: schedulerFactoryBean_QuartzSchedulerThread
2018-08-29 15:18:11,389 [Thread-5] [DEBUG] org.quartz.simpl.SimpleThreadPool - Shutting down threadpool...
2018-08-29 15:18:11,389 [Thread-5] [DEBUG] org.quartz.simpl.SimpleThreadPool - Shutdown of threadpool complete.
2018-08-29 15:18:11,392 [schedulerFactoryBean_QuartzSchedulerThread] [DEBUG] org.quartz.impl.jdbcjobstore.StdRowLockSemaphore - Lock 'TRIGGER_ACCESS' returned by: schedulerFactoryBean_QuartzSchedulerThread
